#Использовать "./../../../../src/en/OInt/tools/"
#Использовать "./../../../../src/ru/OInt/tools/"
#Использовать "./internal"

Перем СписокРабот;
Перем ШаблонCliWindows;
Перем ШаблонOsWindows;
Перем ШаблонOsLinux;
Перем ШаблонCliRpm;
Перем ШаблонCliDeb;
Перем ШаблонШага;
Перем ШаблонВыполнения;

Процедура СоздатьНаборWorkflow(Знач Языки, Знач КаталогПараметров, Знач КаталогWorkflow) Экспорт

	КаталогШаблонов = "./service/templates/jenkins/";

	ПутьШаблонаCliWindows = КаталогШаблонов + "cli_test_windows.txt";
	ПутьШаблонаOsWindows  = КаталогШаблонов + "os_test_windows.txt";
	ПутьШаблонаOsLinux    = КаталогШаблонов + "os_test_linux.txt";
	ПутьШаблонаCliRpm     = КаталогШаблонов + "cli_test_rpm.txt";
	ПутьШаблонаCliDeb     = КаталогШаблонов + "cli_test_deb.txt";

	ПутьШаблонаШага       = КаталогШаблонов + "test_stage.txt";
	ПутьШаблонаВыполнения = КаталогШаблонов + "test_exec.txt";

	ШаблонCliWindows = Новый ДвоичныеДанные(ПутьШаблонаCliWindows);
	ШаблонCliWindows = ПолучитьСтрокуИзДвоичныхДанных(ШаблонCliWindows);

	ШаблонOsWindows = Новый ДвоичныеДанные(ПутьШаблонаOsWindows);
	ШаблонOsWindows = ПолучитьСтрокуИзДвоичныхДанных(ШаблонOsWindows);

	ШаблонOsLinux = Новый ДвоичныеДанные(ПутьШаблонаOsLinux);
	ШаблонOsLinux = ПолучитьСтрокуИзДвоичныхДанных(ШаблонOsLinux);

	ШаблонCliRpm = Новый ДвоичныеДанные(ПутьШаблонаCliRpm);
	ШаблонCliRpm = ПолучитьСтрокуИзДвоичныхДанных(ШаблонCliRpm);

	ШаблонCliDeb = Новый ДвоичныеДанные(ПутьШаблонаCliDeb);
	ШаблонCliDeb = ПолучитьСтрокуИзДвоичныхДанных(ШаблонCliDeb);

	ШаблонШага = Новый ДвоичныеДанные(ПутьШаблонаШага);
	ШаблонШага = ПолучитьСтрокуИзДвоичныхДанных(ШаблонШага);

	ШаблонВыполнения = Новый ДвоичныеДанные(ПутьШаблонаВыполнения);
	ШаблонВыполнения = ПолучитьСтрокуИзДвоичныхДанных(ШаблонВыполнения);

	Для Каждого Язык Из Языки Цикл

		ФайлПараметров = КаталогПараметров + Язык + ".json";
		ЛокальныеПараметры = Инструменты.ПрочитатьФайлJSON(ФайлПараметров);
		СформироватьWorflow(ЛокальныеПараметры, КаталогWorkflow, Язык);

	КонецЦикла;

КонецПроцедуры

Процедура СформироватьWorflow(Знач Параметры, Знач КаталогWorkflow, Знач Язык)
	
	СписокРабот     = "";
	СписокБиблиотек = Неопределено;
	ТаблицаТестов   = Неопределено;
	МассивВлияющих  = Новый Массив;

	МодульТестов    = Параметры["testsModulePath"];
	МодульТестовCLI = Параметры["testsCliModulePath"];

	Выполнить("ТаблицаТестов   = " + Параметры["testsTableMethod"]);
	Выполнить("СписокБиблиотек = " + Параметры["testsSectionsMethod"]);

	ФайлJenkinsOS    = КаталогWorkflow + "os_test_" + Язык;
	ФайлJenkinsOSRPM = КаталогWorkflow + "os_rpm_test_" + Язык;
	ФайлJenkinsOSDEB = КаталогWorkflow + "os_deb_test_" + Язык;
	ФайлWindowsCLI   = КаталогWorkflow + "cli_test_" + Язык;
	ФайлRpmCLI       = КаталогWorkflow + "cli_rpm_test_" + Язык;
	ФайлDebCLI       = КаталогWorkflow + "cli_deb_test_" + Язык;

	ТекстВыполненияOS  = ПолучитьТекстВыполнения(ТаблицаТестов, СписокБиблиотек, Параметры, МодульТестов);
	ТекстВыполненияCLI = ПолучитьТекстВыполнения(ТаблицаТестов, СписокБиблиотек, Параметры, МодульТестовCLI, "CLI_");

	ТекстJFCLI   = СтрШаблон(ШаблонCliWindows, Язык, ТекстВыполненияCLI);
	ТекстJFOS    = СтрШаблон(ШаблонOsWindows, Язык, ТекстВыполненияOS);

	ТекстJFOSRPM = СтрШаблон(ШаблонOsLinux, Язык, ТекстВыполненияOS, "Rpm-Agent");
	ТекстJFOSDEB = СтрШаблон(ШаблонOsLinux, Язык, ТекстВыполненияOS, "Deb-Agent");
	
	ТекстJFCLIRPM = СтрШаблон(ШаблонCliRpm, Язык, ТекстВыполненияCLI, "Rpm-Agent");
	ТекстJFCLIDEB = СтрШаблон(ШаблонCliDeb, Язык, ТекстВыполненияCLI, "Deb-Agent");

	ПолучитьДвоичныеДанныеИзСтроки(ТекстJFOS).Записать(ФайлJenkinsOS);
	ПолучитьДвоичныеДанныеИзСтроки(ТекстJFOSRPM).Записать(ФайлJenkinsOSRPM);
	ПолучитьДвоичныеДанныеИзСтроки(ТекстJFOSDEB).Записать(ФайлJenkinsOSDEB);
	ПолучитьДвоичныеДанныеИзСтроки(ТекстJFCLI).Записать(ФайлWindowsCLI);
	ПолучитьДвоичныеДанныеИзСтроки(ТекстJFCLIRPM).Записать(ФайлRpmCLI);
	ПолучитьДвоичныеДанныеИзСтроки(ТекстJFCLIDEB).Записать(ФайлDebCLI);

КонецПроцедуры

Функция ПолучитьТекстВыполнения(Знач ТаблицаТестов, Знач СписокБиблиотек, Знач Параметры, Знач МодульТестов, Знач Префикс = "")
	
	СтрокаРаздел    = Параметры["sectionsString"];
	СтрокаМетод     = Параметры["methodString"];
	СтрокаСиноним   = Параметры["synonymString"];

	МассивШагов = Новый Массив;
	Для Каждого Библиотека Из СписокБиблиотек Цикл

		Раздел      = Библиотека.Ключ;

		Отбор = Новый Структура(СтрокаРаздел, Раздел);
		ТестыТекущегоРаздела = ТаблицаТестов.НайтиСтроки(Отбор);

		МассивВыполнений = Новый Массив;
		Для Каждого Тест Из ТестыТекущегоРаздела Цикл

			Метод = Префикс + Тест[СтрокаМетод];
			
			МассивВыполнений.Добавить(СтрШаблон(ШаблонВыполнения, МодульТестов, Метод))

		КонецЦикла;

		МассивШагов.Добавить(СтрШаблон(ШаблонШага, Раздел, СтрСоединить(МассивВыполнений, Символы.ПС)));

	КонецЦикла;

	Возврат СтрСоединить(МассивШагов, Символы.ПС);

КонецФункции


