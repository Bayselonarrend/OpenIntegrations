#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбновитьНомераВерсий(Знач ПутьPackagedef, Знач Версия) Экспорт
	
	Признак    = ".Версия(""";
	Packagedef = Новый ТекстовыйДокумент();
	Packagedef.Прочитать(ПутьPackagedef);
	
	Для Н = 1 По Packagedef.КоличествоСтрок() Цикл
		
		ТекущаяСтрока = СокрЛП(Packagedef.ПолучитьСтроку(Н));
		Если СтрНайти(ТекущаяСтрока, Признак) Тогда
			Packagedef.ЗаменитьСтроку(Н, "    .Версия(""" + Версия + """)");
			Packagedef.Записать(ПутьPackagedef);
			Возврат;
		КонецЕсли;    
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьLibConfig(Знач СоответствиеКовертации, Знач ПутьПакета, Знач СоответствиеНесовпадающихИмен) Экспорт
	
	Документ = Новый ТекстовыйДокумент();
	Документ.ДобавитьСтроку("<package-def>");
	
	Макет = "    <module name=""%1"" file=""%2""/>";
	
	Для Каждого Модуль Из СоответствиеКовертации Цикл
		
		ТекущийМодуль = Модуль.Значение;
		ФайлМодуля    = Новый Файл(ТекущийМодуль);
		ПутьМодуля    = СтрЗаменить(ТекущийМодуль, ПутьПакета, "");
		Библиотека    = ФайлМодуля.ИмяБезРасширения;
		
		Если Библиотека = "OPI_Тесты" Или  Библиотека = "OPI_ТестыCLI" Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока = СтрШаблон(Макет, Библиотека, СокрЛП(ПутьМодуля));
		Документ.ДобавитьСтроку(ТекущаяСтрока);
		
		
		Для Каждого ПараИмен Из СоответствиеНесовпадающихИмен Цикл
			
			Если ПараИмен.Ключ = Библиотека Тогда		
				ТекущаяСтрока = СтрШаблон(Макет, ПараИмен.Значение, СокрЛП(ПутьМодуля));
				Документ.ДобавитьСтроку(ТекущаяСтрока);
				Продолжить;
			КонецЕсли;
			
			Если ПараИмен.Значение = Библиотека Тогда		
				ТекущаяСтрока = СтрШаблон(Макет, ПараИмен.Ключ, СокрЛП(ПутьМодуля));
				Документ.ДобавитьСтроку(ТекущаяСтрока);
				Продолжить;
			КонецЕсли;

		КонецЦикла;
		
	КонецЦикла;
	
	Документ.ДобавитьСтроку("</package-def>");
	Документ.Записать(ПутьПакета + "lib.config");
	
КонецПроцедуры

#КонецОбласти