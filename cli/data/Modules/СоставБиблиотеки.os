Функция ПолучитьСоответствиеКомандМодулей() Экспорт
СоответствиеКомандМодулей  = Новый Соответствие();
СоответствиеКомандМодулей.Вставить("telegram", "OPI_Telegram");
СоответствиеКомандМодулей.Вставить("vk", "OPI_VK");
СоответствиеКомандМодулей.Вставить("viber", "OPI_Viber");
СоответствиеКомандМодулей.Вставить("twitter", "OPI_Twitter");
СоответствиеКомандМодулей.Вставить("notion", "OPI_Notion");
СоответствиеКомандМодулей.Вставить("yandex", "OPI_YandexID");
СоответствиеКомандМодулей.Вставить("yadisk", "OPI_YandexDisk");
СоответствиеКомандМодулей.Вставить("google", "OPI_GoogleWorkspace");
СоответствиеКомандМодулей.Вставить("gcalendar", "OPI_GoogleCalendar");
СоответствиеКомандМодулей.Вставить("gdrive", "OPI_GoogleDrive");
Возврат СоответствиеКомандМодулей;
КонецФункции

Функция ПолучитьСостав() Экспорт

    ТаблицаСостава = Новый ТаблицаЗначений();
    ТаблицаСостава.Колонки.Добавить("Библиотека");
    ТаблицаСостава.Колонки.Добавить("Модуль");
    ТаблицаСостава.Колонки.Добавить("Метод");
    ТаблицаСостава.Колонки.Добавить("МетодПоиска");
    ТаблицаСостава.Колонки.Добавить("Параметр");
    ТаблицаСостава.Колонки.Добавить("Описание");
    ТаблицаСостава.Колонки.Добавить("ОписаниеМетода");

    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "СформироватьСсылкуПолученияКода";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬССЫЛКУПОЛУЧЕНИЯКОДА";
    НоваяСтрока.Параметр    = "--id";
    НоваяСтрока.Описание    = "Client ID";
    НоваяСтрока.ОписаниеМетода   = "Возвращает URL для авторизации в браузере";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "СформироватьСсылкуПолученияКода";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬССЫЛКУПОЛУЧЕНИЯКОДА";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "разрешение на методы Calendar (необяз. по ум. - True)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "СформироватьСсылкуПолученияКода";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬССЫЛКУПОЛУЧЕНИЯКОДА";
    НоваяСтрока.Параметр    = "--drive";
    НоваяСтрока.Описание    = "разрешение на методы Drive (необяз. по ум. - True)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "ПолучитьТокенПоКоду";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬТОКЕНПОКОДУ";
    НоваяСтрока.Параметр    = "--id";
    НоваяСтрока.Описание    = "Client ID";
    НоваяСтрока.ОписаниеМетода   = "Получает токен по коду из авторизации в бразуере";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "ПолучитьТокенПоКоду";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬТОКЕНПОКОДУ";
    НоваяСтрока.Параметр    = "--secret";
    НоваяСтрока.Описание    = "Client secret";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "ПолучитьТокенПоКоду";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬТОКЕНПОКОДУ";
    НоваяСтрока.Параметр    = "--code";
    НоваяСтрока.Описание    = "Code из браузера";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "ОбновитьТокен";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--id";
    НоваяСтрока.Описание    = "Client ID";
    НоваяСтрока.ОписаниеМетода   = "Обновляет токен по Refresh token";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "ОбновитьТокен";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--secret";
    НоваяСтрока.Описание    = "Client secret";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "google";
    НоваяСтрока.Модуль      = "OPI_GoogleWorkspace";
    НоваяСтрока.Метод       = "ОбновитьТокен";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--refresh";
    НоваяСтрока.Описание    = "Refresh token";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "СоздатьКалендарь";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКАЛЕНДАРЬ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает пустой календарь";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "СоздатьКалендарь";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКАЛЕНДАРЬ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Наименование создаваемого календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьМетаданныеКалендаря";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬМЕТАДАННЫЕКАЛЕНДАРЯ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию о календаре по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьМетаданныеКалендаря";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬМЕТАДАННЫЕКАЛЕНДАРЯ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьМетаданныеКалендаря";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬМЕТАДАННЫЕКАЛЕНДАРЯ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Изменяет свойства существуещего календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьМетаданныеКалендаря";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬМЕТАДАННЫЕКАЛЕНДАРЯ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьМетаданныеКалендаря";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬМЕТАДАННЫЕКАЛЕНДАРЯ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Новое наименование (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьМетаданныеКалендаря";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬМЕТАДАННЫЕКАЛЕНДАРЯ";
    НоваяСтрока.Параметр    = "--description";
    НоваяСтрока.Описание    = "Новое описание календаря (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ОчиститьОсновнойКалендарь";
    НоваяСтрока.МетодПоиска = "ОЧИСТИТЬОСНОВНОЙКАЛЕНДАРЬ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Очищает список событий основного календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "УдалитьКалендарь";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКАЛЕНДАРЬ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет календарь по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "УдалитьКалендарь";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКАЛЕНДАРЬ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьСписокКалендарей";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОККАЛЕНДАРЕЙ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает массив календарей аккаунта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ДобавитьКалендарьВСписок";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬКАЛЕНДАРЬВСПИСОК";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Добавляет существующий календарь в список пользователя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ДобавитьКалендарьВСписок";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬКАЛЕНДАРЬВСПИСОК";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьКалендарьСписка";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬКАЛЕНДАРЬСПИСКА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает календарь из списка пользователя по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьКалендарьСписка";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬКАЛЕНДАРЬСПИСКА";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "УдалитьКалендарьИзСписка";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКАЛЕНДАРЬИЗСПИСКА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет календарь из списка пользователя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "УдалитьКалендарьИзСписка";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКАЛЕНДАРЬИЗСПИСКА";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьКалендарьСписка";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬКАЛЕНДАРЬСПИСКА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Изменяет свойства календаря из списка пользователей";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьКалендарьСписка";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬКАЛЕНДАРЬСПИСКА";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьКалендарьСписка";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬКАЛЕНДАРЬСПИСКА";
    НоваяСтрока.Параметр    = "--primary";
    НоваяСтрока.Описание    = "HEX основного цвета (#ffffff)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьКалендарьСписка";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬКАЛЕНДАРЬСПИСКА";
    НоваяСтрока.Параметр    = "--secondary";
    НоваяСтрока.Описание    = "HEX дополнительного цвета (#ffffff)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьКалендарьСписка";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬКАЛЕНДАРЬСПИСКА";
    НоваяСтрока.Параметр    = "--hidden";
    НоваяСтрока.Описание    = "Скрытый календарь (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьСписокСобытий";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКСОБЫТИЙ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает список всех событий календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьСписокСобытий";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКСОБЫТИЙ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьСобытие";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает событие по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьСобытие";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПолучитьСобытие";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--event";
    НоваяСтрока.Описание    = "ID события";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "СоздатьСобытие";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает новое событие
    |
    |    Структура JSON данных события (параметр --props):
    |    {
    |     ""Описание""                : """",       // Описание события
    |     ""Заголовок""               : """",       // Заголовок события
    |     ""МестоПроведения""         : """",       // Строка описание места проведения
    |     ""ДатаНачала""              : """",       // Дата начала события
    |     ""ДатаОкончания""           : """",       // Дата окончания события
    |     ""МассивURLФайловВложений"" :             // Ключ - название, Значение - URL к файлу
    |         {
    |          ""НазваниеФайла1"" : ""URLФайла1"",
    |          ""НазваниеФайла2"" : ""URLФайла2"",
    |          ...
    |         },
    |     ""ОтправлятьУведомления""   : true        // Признак отправки уведомлений участникам
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "СоздатьСобытие";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "СоздатьСобытие";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--props";
    НоваяСтрока.Описание    = "Описание события";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПереместитьСобытие";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Перемещает событие в другой календарь";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПереместитьСобытие";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--from";
    НоваяСтрока.Описание    = "ID календаря источника";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПереместитьСобытие";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--to";
    НоваяСтрока.Описание    = "ID календаря приемника";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ПереместитьСобытие";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--event";
    НоваяСтрока.Описание    = "ID события календаря источника";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьСобытие";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Изменяет существующее событие
    |
    |    Структура JSON данных события (параметр --props):
    |    {
    |     ""Описание""                : """",       // Описание события
    |     ""Заголовок""               : """",       // Заголовок события
    |     ""МестоПроведения""         : """",       // Строка описание места проведения
    |     ""ДатаНачала""              : """",       // Дата начала события
    |     ""ДатаОкончания""           : """",       // Дата окончания события
    |     ""МассивURLФайловВложений"" :             // Ключ - название, Значение - URL к файлу
    |         {
    |          ""НазваниеФайла1"" : ""URLФайла1"",
    |          ""НазваниеФайла2"" : ""URLФайла2"",
    |          ...
    |         },
    |     ""ОтправлятьУведомления""   : true        // Признак отправки уведомлений участникам
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьСобытие";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьСобытие";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--props";
    НоваяСтрока.Описание    = "Новое описание события";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "ИзменитьСобытие";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--event";
    НоваяСтрока.Описание    = "ID события";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "УдалитьСобытие";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет событие по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "УдалитьСобытие";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--calendar";
    НоваяСтрока.Описание    = "ID календаря";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gcalendar";
    НоваяСтрока.Модуль      = "OPI_GoogleCalendar";
    НоваяСтрока.Метод       = "УдалитьСобытие";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬСОБЫТИЕ";
    НоваяСтрока.Параметр    = "--event";
    НоваяСтрока.Описание    = "ID события";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yandex";
    НоваяСтрока.Модуль      = "OPI_YandexID";
    НоваяСтрока.Метод       = "ПолучитьКодПодтверждения";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬКОДПОДТВЕРЖДЕНИЯ";
    НоваяСтрока.Параметр    = "--id";
    НоваяСтрока.Описание    = "Client id";
    НоваяСтрока.ОписаниеМетода   = "Получает код подтверждения и адрес страницы, на которой его необходимо ввести";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yandex";
    НоваяСтрока.Модуль      = "OPI_YandexID";
    НоваяСтрока.Метод       = "ПреобразоватьКодВТокен";
    НоваяСтрока.МетодПоиска = "ПРЕОБРАЗОВАТЬКОДВТОКЕН";
    НоваяСтрока.Параметр    = "--id";
    НоваяСтрока.Описание    = "Client id";
    НоваяСтрока.ОписаниеМетода   = "Преобразовывает код в токен после ввода кода при выполнении ПолучитьКодПодтверждения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yandex";
    НоваяСтрока.Модуль      = "OPI_YandexID";
    НоваяСтрока.Метод       = "ПреобразоватьКодВТокен";
    НоваяСтрока.МетодПоиска = "ПРЕОБРАЗОВАТЬКОДВТОКЕН";
    НоваяСтрока.Параметр    = "--secret";
    НоваяСтрока.Описание    = "Client secret";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yandex";
    НоваяСтрока.Модуль      = "OPI_YandexID";
    НоваяСтрока.Метод       = "ПреобразоватьКодВТокен";
    НоваяСтрока.МетодПоиска = "ПРЕОБРАЗОВАТЬКОДВТОКЕН";
    НоваяСтрока.Параметр    = "--device";
    НоваяСтрока.Описание    = "device_code из ПолучитьКодПодтверждения()";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yandex";
    НоваяСтрока.Модуль      = "OPI_YandexID";
    НоваяСтрока.Метод       = "ОбновитьТокен";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--id";
    НоваяСтрока.Описание    = "Client id";
    НоваяСтрока.ОписаниеМетода   = "Обновляет токен по Refresh token";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yandex";
    НоваяСтрока.Модуль      = "OPI_YandexID";
    НоваяСтрока.Метод       = "ОбновитьТокен";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--secret";
    НоваяСтрока.Описание    = "Client secret";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yandex";
    НоваяСтрока.Модуль      = "OPI_YandexID";
    НоваяСтрока.Метод       = "ОбновитьТокен";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--refresh";
    НоваяСтрока.Описание    = "Refresh token";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "УстановитьWebhook";
    НоваяСтрока.МетодПоиска = "УСТАНОВИТЬWEBHOOK";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен Viber";
    НоваяСтрока.ОписаниеМетода   = "ВАЖНО: Установка Webhook обязательна по правилам Viber. Для этого надо иметь свободный URL,
    |    который будет возвращать 200 и подлинный SSL сертификат. Если есть сертификат и база опубликована
    |    на сервере - можно использовать http-сервис. Туда же будет приходить и информация о новых сообщениях
    |    Viber периодически стучит по адресу Webhook, так что если он будет неактивен, то все перестанет работать";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "УстановитьWebhook";
    НоваяСтрока.МетодПоиска = "УСТАНОВИТЬWEBHOOK";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "URL для установки Webhook";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ПолучитьИнформациюОКанале";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬИНФОРМАЦИЮОКАНАЛЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Тут можно получить ID пользователей канала. ID для бота необходимо получать из прилетов на Webhook
    |    ID пользователя из информации о канале не подойдет для отправки сообщений через бота - они разные";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ПолучитьДанныеПользователя";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬДАННЫЕПОЛЬЗОВАТЕЛЯ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию о пользователе по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ПолучитьДанныеПользователя";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬДАННЫЕПОЛЬЗОВАТЕЛЯ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя Viber";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ПолучитьОнлайнПользователей";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬОНЛАЙНПОЛЬЗОВАТЕЛЕЙ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен Viber";
    НоваяСтрока.ОписаниеМетода   = "Получает статус пользователя или нескольких пользователей по ID
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ПолучитьОнлайнПользователей";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬОНЛАЙНПОЛЬЗОВАТЕЛЕЙ";
    НоваяСтрока.Параметр    = "--users";
    НоваяСтрока.Описание    = "ID пользователей(я) Viber";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Отправляет текстовое сообщение в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя. Для канала > администратора, для бота > получателя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--ischannel";
    НоваяСтрока.Описание    = "Отправка в канал или в чат бота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "См. СформироватьКлавиатуруИзМассиваКнопок (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Отправляет картинку в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--picture";
    НоваяСтрока.Описание    = "URL картинки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя. Для канала > администратора, для бота > получателя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--ischannel";
    НоваяСтрока.Описание    = "Отправка в канал или в чат бота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--description";
    НоваяСтрока.Описание    = "Аннотация к картинке (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьФайл";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Отправляет файл (документ) в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьФайл";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--file";
    НоваяСтрока.Описание    = "URL файла";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьФайл";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя. Для канала > администратора, для бота > получателя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьФайл";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--ischannel";
    НоваяСтрока.Описание    = "Отправка в канал или в чат бота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьФайл";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--ext";
    НоваяСтрока.Описание    = "Расширение файла";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьФайл";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--size";
    НоваяСтрока.Описание    = "Размер файла. Если не заполнен > определяется автоматически скачиванием файла (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Отправляет контакт с номером телефона в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--name";
    НоваяСтрока.Описание    = "Имя контакта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--phone";
    НоваяСтрока.Описание    = "Номер телефона";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя. Для канала > администратора, для бота > получателя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--ischannel";
    НоваяСтрока.Описание    = "Отправка в канал или в чат бота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьЛокацию";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬЛОКАЦИЮ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Отправляет географические координаты в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьЛокацию";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬЛОКАЦИЮ";
    НоваяСтрока.Параметр    = "--lat";
    НоваяСтрока.Описание    = "Географическая широта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьЛокацию";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬЛОКАЦИЮ";
    НоваяСтрока.Параметр    = "--long";
    НоваяСтрока.Описание    = "Географическая долгота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьЛокацию";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬЛОКАЦИЮ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя. Для канала > администратора, для бота > получателя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьЛокацию";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬЛОКАЦИЮ";
    НоваяСтрока.Параметр    = "--ischannel";
    НоваяСтрока.Описание    = "Отправка в канал или в чат бота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьСсылку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬССЫЛКУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Отправляет URL с предпросмотром в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьСсылку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬССЫЛКУ";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "Отправляемая ссылка";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьСсылку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬССЫЛКУ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя. Для канала > администратора, для бота > получателя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "ОтправитьСсылку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬССЫЛКУ";
    НоваяСтрока.Параметр    = "--ischannel";
    НоваяСтрока.Описание    = "Отправка в канал или в чат бота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "СформироватьКлавиатуруИзМассиваКнопок";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬКЛАВИАТУРУИЗМАССИВАКНОПОК";
    НоваяСтрока.Параметр    = "--buttons";
    НоваяСтрока.Описание    = "Массив кнопок";
    НоваяСтрока.ОписаниеМетода   = "Возвращает структура клавиатуры для сообщений
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "viber";
    НоваяСтрока.Модуль      = "OPI_Viber";
    НоваяСтрока.Метод       = "СформироватьКлавиатуруИзМассиваКнопок";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬКЛАВИАТУРУИЗМАССИВАКНОПОК";
    НоваяСтрока.Параметр    = "--color";
    НоваяСтрока.Описание    = "HEX цвет кнопок с # в начале (необяз. по ум. - #2db9b9)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПолучитьИнформациюБота";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬИНФОРМАЦИЮБОТА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Выполняет запрос     |   getMe, возвращающий базовую информацию о боте: имя, id, возможность добавлять бота в группы и т.д.";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПолучитьОбновления";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬОБНОВЛЕНИЯ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Выполняет запрос     |   getUpdates, возвращающий информацию о событиях бота. Используется при работе в polling режиме";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "УстановитьWebhook";
    НоваяСтрока.МетодПоиска = "УСТАНОВИТЬWEBHOOK";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Устанавливает URL обработчика событий бота для работы в режиме Webhook";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "УстановитьWebhook";
    НоваяСтрока.МетодПоиска = "УСТАНОВИТЬWEBHOOK";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "Адрес обработки запросов от Telegram (с https:)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "УдалитьWebhook";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬWEBHOOK";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Удаляет URL обработчика событий бота для работы в режиме Webhook";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет текстовое сообщение в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьТекстовоеСообщение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬТЕКСТОВОЕСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "См. СформироватьКлавиатуруПоМассивуКнопок (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет картинку в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--picture";
    НоваяСтрока.Описание    = "Файл картинки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКартинку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьВидео";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬВИДЕО";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет видео в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьВидео";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬВИДЕО";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьВидео";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬВИДЕО";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьВидео";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬВИДЕО";
    НоваяСтрока.Параметр    = "--video";
    НоваяСтрока.Описание    = "Файл видео";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьВидео";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬВИДЕО";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьАудио";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬАУДИО";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет аудиофайл в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьАудио";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬАУДИО";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьАудио";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬАУДИО";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьАудио";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬАУДИО";
    НоваяСтрока.Параметр    = "--audio";
    НоваяСтрока.Описание    = "Файл аудио";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьАудио";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬАУДИО";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьДокумент";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬДОКУМЕНТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет документ в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьДокумент";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬДОКУМЕНТ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьДокумент";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬДОКУМЕНТ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьДокумент";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬДОКУМЕНТ";
    НоваяСтрока.Параметр    = "--doc";
    НоваяСтрока.Описание    = "Файл документа";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьДокумент";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬДОКУМЕНТ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьГифку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬГИФКУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет гифку в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьГифку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬГИФКУ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьГифку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬГИФКУ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьГифку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬГИФКУ";
    НоваяСтрока.Параметр    = "--gif";
    НоваяСтрока.Описание    = "Файл гифки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьГифку";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬГИФКУ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМедиагруппу";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕДИАГРУППУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет набор файлов в чат или канал. Варианты типов медиа: audio, document, photo, video
    |
    |    Структура JSON данных медиагруппы (параметр --media):
    |    {
    |     ""ПутьКФайлу"": ""ТипМедиа"",
    |     ""ПутьКФайлу"": ""ТипМедиа"",
    |     ...
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМедиагруппу";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕДИАГРУППУ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМедиагруппу";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕДИАГРУППУ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМедиагруппу";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕДИАГРУППУ";
    НоваяСтрока.Параметр    = "--media";
    НоваяСтрока.Описание    = "JSON";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМестоположение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕСТОПОЛОЖЕНИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет местоположение по географической широте и долготе в чат или канал";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМестоположение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕСТОПОЛОЖЕНИЕ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМестоположение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕСТОПОЛОЖЕНИЕ";
    НоваяСтрока.Параметр    = "--lat";
    НоваяСтрока.Описание    = "Географическая широта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМестоположение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕСТОПОЛОЖЕНИЕ";
    НоваяСтрока.Параметр    = "--long";
    НоваяСтрока.Описание    = "Географическая долгота";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьМестоположение";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬМЕСТОПОЛОЖЕНИЕ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет контакт с именем и номером телефона";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--name";
    НоваяСтрока.Описание    = "Имя контакта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--surname";
    НоваяСтрока.Описание    = "Фамилия контакта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--phone";
    НоваяСтрока.Описание    = "Телефон контакта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьКонтакт";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬКОНТАКТ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьОпрос";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬОПРОС";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Отправляет опрос с вариантами ответа
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьОпрос";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬОПРОС";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьОпрос";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬОПРОС";
    НоваяСтрока.Параметр    = "--question";
    НоваяСтрока.Описание    = "Вопрос опроса";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьОпрос";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬОПРОС";
    НоваяСтрока.Параметр    = "--options";
    НоваяСтрока.Описание    = "Массив вариантов ответа";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОтправитьОпрос";
    НоваяСтрока.МетодПоиска = "ОТПРАВИТЬОПРОС";
    НоваяСтрока.Параметр    = "--anonymous";
    НоваяСтрока.Описание    = "Анонимность опроса (необяз. по ум. - True)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПереслатьСообщение";
    НоваяСтрока.МетодПоиска = "ПЕРЕСЛАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Пересылает сообщение между чатами или в рамках одного чата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПереслатьСообщение";
    НоваяСтрока.МетодПоиска = "ПЕРЕСЛАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--message";
    НоваяСтрока.Описание    = "ID оригинального сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПереслатьСообщение";
    НоваяСтрока.МетодПоиска = "ПЕРЕСЛАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--from";
    НоваяСтрока.Описание    = "ID чата оригинального сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПереслатьСообщение";
    НоваяСтрока.МетодПоиска = "ПЕРЕСЛАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--to";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "Бан";
    НоваяСтрока.МетодПоиска = "БАН";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Банит пользователя в выбранном чате";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "Бан";
    НоваяСтрока.МетодПоиска = "БАН";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "Бан";
    НоваяСтрока.МетодПоиска = "БАН";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID целевого пользователя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "Разбан";
    НоваяСтрока.МетодПоиска = "РАЗБАН";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Разбанивает забаненного ранее пользователя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "Разбан";
    НоваяСтрока.МетодПоиска = "РАЗБАН";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "Разбан";
    НоваяСтрока.МетодПоиска = "РАЗБАН";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID целевого пользователя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьСсылкуПриглашение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬССЫЛКУПРИГЛАШЕНИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Создает ссылку для вступления в закрытый чат
    |    Дата указывается в формате ISO 8601:
    |    ""2024-04-07""
    |    ""2024-04-07T13:34:42+00:00"" 
    |    ""2024-04-07T13:34:42Z""
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьСсылкуПриглашение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬССЫЛКУПРИГЛАШЕНИЕ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата или IDЧата*IDТемы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьСсылкуПриглашение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬССЫЛКУПРИГЛАШЕНИЕ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Заголовок приглашения (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьСсылкуПриглашение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬССЫЛКУПРИГЛАШЕНИЕ";
    НоваяСтрока.Параметр    = "--expire";
    НоваяСтрока.Описание    = "Дата окончания жизни ссылки (безсрочно, если не указано) (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьСсылкуПриглашение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬССЫЛКУПРИГЛАШЕНИЕ";
    НоваяСтрока.Параметр    = "--limit";
    НоваяСтрока.Описание    = "Лимит пользователей (бесконечно, если не указано) (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ЗакрепитьСообщение";
    НоваяСтрока.МетодПоиска = "ЗАКРЕПИТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Закрепляет сообщение в шапке чата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ЗакрепитьСообщение";
    НоваяСтрока.МетодПоиска = "ЗАКРЕПИТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ЗакрепитьСообщение";
    НоваяСтрока.МетодПоиска = "ЗАКРЕПИТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--message";
    НоваяСтрока.Описание    = "ID целевого сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОткрепитьСообщение";
    НоваяСтрока.МетодПоиска = "ОТКРЕПИТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Открепляет сообщение в шапке чата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОткрепитьСообщение";
    НоваяСтрока.МетодПоиска = "ОТКРЕПИТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОткрепитьСообщение";
    НоваяСтрока.МетодПоиска = "ОТКРЕПИТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--message";
    НоваяСтрока.Описание    = "ID целевого сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПолучитьЧислоУчастников";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬЧИСЛОУЧАСТНИКОВ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен бота";
    НоваяСтрока.ОписаниеМетода   = "Получает общее число участников чата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПолучитьЧислоУчастников";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬЧИСЛОУЧАСТНИКОВ";
    НоваяСтрока.Параметр    = "--chat";
    НоваяСтрока.Описание    = "ID целевого чата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПолучитьСписокИконокАватаров";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКИКОНОКАВАТАРОВ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает соответствие ID Emoji для установки в качестве иконок тем форума";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьТемуФорума";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает новую тему в группе с включенным функционалом тем";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьТемуФорума";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата создания темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьТемуФорума";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Заголовок темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СоздатьТемуФорума";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--icon";
    НоваяСтрока.Описание    = "См. ПолучитьСписокИконокАватаров (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьТемуФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает новую тему в группе с включенным функционалом тем";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьТемуФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата создания темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьТемуФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьТемуФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Новый заголовок (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьТемуФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--icon";
    НоваяСтрока.Описание    = "См. ПолучитьСписокИконокАватаров (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ЗакрытьТемуФорума";
    НоваяСтрока.МетодПоиска = "ЗАКРЫТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Закрывает тему для новых сообщений";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ЗакрытьТемуФорума";
    НоваяСтрока.МетодПоиска = "ЗАКРЫТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ЗакрытьТемуФорума";
    НоваяСтрока.МетодПоиска = "ЗАКРЫТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID темы (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОткрытьТемуФорума";
    НоваяСтрока.МетодПоиска = "ОТКРЫТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Повторно открывает ранее закрытую тему форума";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОткрытьТемуФорума";
    НоваяСтрока.МетодПоиска = "ОТКРЫТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОткрытьТемуФорума";
    НоваяСтрока.МетодПоиска = "ОТКРЫТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID темы (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "УдалитьТемуФорума";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет тему форума";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "УдалитьТемуФорума";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "УдалитьТемуФорума";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СкрытьГлавнуюТемуФорума";
    НоваяСтрока.МетодПоиска = "СКРЫТЬГЛАВНУЮТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Скрывает главную тему форума";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СкрытьГлавнуюТемуФорума";
    НоваяСтрока.МетодПоиска = "СКРЫТЬГЛАВНУЮТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПоказатьГлавнуюТемуФорума";
    НоваяСтрока.МетодПоиска = "ПОКАЗАТЬГЛАВНУЮТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Показывает ранее скрытую главную тему форума";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ПоказатьГлавнуюТемуФорума";
    НоваяСтрока.МетодПоиска = "ПОКАЗАТЬГЛАВНУЮТЕМУФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьИмяГлавнойТемыФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬИМЯГЛАВНОЙТЕМЫФОРУМА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Изменяет имя главной темы форума";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьИмяГлавнойТемыФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬИМЯГЛАВНОЙТЕМЫФОРУМА";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ИзменитьИмяГлавнойТемыФорума";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬИМЯГЛАВНОЙТЕМЫФОРУМА";
    НоваяСтрока.Параметр    = "--name";
    НоваяСтрока.Описание    = "Новое имя главной темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОчиститьСписокЗакрепленныхСообщенийТемы";
    НоваяСтрока.МетодПоиска = "ОЧИСТИТЬСПИСОКЗАКРЕПЛЕННЫХСООБЩЕНИЙТЕМЫ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Очищает список закрепленных сообщений в теме форума";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОчиститьСписокЗакрепленныхСообщенийТемы";
    НоваяСтрока.МетодПоиска = "ОЧИСТИТЬСПИСОКЗАКРЕПЛЕННЫХСООБЩЕНИЙТЕМЫ";
    НоваяСтрока.Параметр    = "--forum";
    НоваяСтрока.Описание    = "ID чата темы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "ОчиститьСписокЗакрепленныхСообщенийТемы";
    НоваяСтрока.МетодПоиска = "ОЧИСТИТЬСПИСОКЗАКРЕПЛЕННЫХСООБЩЕНИЙТЕМЫ";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID темы. Главная, если не заполнено (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СформироватьКлавиатуруПоМассивуКнопок";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬКЛАВИАТУРУПОМАССИВУКНОПОК";
    НоваяСтрока.Параметр    = "--buttons";
    НоваяСтрока.Описание    = "Массив кнопок";
    НоваяСтрока.ОписаниеМетода   = "Формирует простую JSON клавиатуру из массив кнопок для сообщения или нижней панели
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СформироватьКлавиатуруПоМассивуКнопок";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬКЛАВИАТУРУПОМАССИВУКНОПОК";
    НоваяСтрока.Параметр    = "--under";
    НоваяСтрока.Описание    = "Клавиатура под сообщением или на нижней панели (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "telegram";
    НоваяСтрока.Модуль      = "OPI_Telegram";
    НоваяСтрока.Метод       = "СформироватьКлавиатуруПоМассивуКнопок";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬКЛАВИАТУРУПОМАССИВУКНОПОК";
    НоваяСтрока.Параметр    = "--column";
    НоваяСтрока.Описание    = "Истина > кнопки выводятся в столбик, Ложь > в строку (необяз. по ум. - True)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьИнформациюОДиске";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬИНФОРМАЦИЮОДИСКЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию о текущем диске";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СоздатьПапку";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПАПКУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает каталог на диске";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СоздатьПапку";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПАПКУ";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь к созаваемой папке";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьОбъект";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию об объекте диска по заданному пути";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьОбъект";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь к папке или файлу";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "УдалитьОбъект";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет объект по заданному пути";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "УдалитьОбъект";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь к удаляемой папке или файлу";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "УдалитьОбъект";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--can";
    НоваяСтрока.Описание    = "В корзину (необяз. по ум. - True)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СоздатьКопиюОбъекта";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКОПИЮОБЪЕКТА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает копию объекта по заданному пути и пути к оригиналу";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СоздатьКопиюОбъекта";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКОПИЮОБЪЕКТА";
    НоваяСтрока.Параметр    = "--from";
    НоваяСтрока.Описание    = "Путь к оригинальному файлу или каталогу";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СоздатьКопиюОбъекта";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКОПИЮОБЪЕКТА";
    НоваяСтрока.Параметр    = "--to";
    НоваяСтрока.Описание    = "Путь назначения для копии";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СоздатьКопиюОбъекта";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКОПИЮОБЪЕКТА";
    НоваяСтрока.Параметр    = "--rewrite";
    НоваяСтрока.Описание    = "Перезаписывать если файл с таким именем уже существует (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСсылкуДляСкачивания";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬССЫЛКУДЛЯСКАЧИВАНИЯ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает ссылку для скачивания файла";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСсылкуДляСкачивания";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬССЫЛКУДЛЯСКАЧИВАНИЯ";
    НоваяСтрока.Параметр    = "--parh";
    НоваяСтрока.Описание    = "Путь к файлу для скачивания";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает список файлов с или без отбора по типу
    |    Список доступных типов: audio, backup, book, compressed, data, development, 
    |                            diskimage, document, encoded, executable, flash, font, 
    |                            mage, settings, spreadsheet, text, unknown, video, web";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--amount";
    НоваяСтрока.Описание    = "Количество возвращаемых объектов (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--offset";
    НоваяСтрока.Описание    = "Смещение для получение объектов не из начала списка (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--type";
    НоваяСтрока.Описание    = "Отбор по типу файла (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--datesort";
    НоваяСтрока.Описание    = "Истина > сортировать по дате, Ложь > по алфавиту (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПереместитьОбъект";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Перемещает объект по заданному пути и пути к оригиналу";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПереместитьОбъект";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--from";
    НоваяСтрока.Описание    = "Путь к оригинальному файлу или папке";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПереместитьОбъект";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--to";
    НоваяСтрока.Описание    = "Путь назначение для перемещения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПереместитьОбъект";
    НоваяСтрока.МетодПоиска = "ПЕРЕМЕСТИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--rewrite";
    НоваяСтрока.Описание    = "Перезаписывать если файл с таким именем уже существует (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ЗагрузитьФайл";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Загружает файл на диск по заданному пути";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ЗагрузитьФайл";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь для сохранение файла на Диске";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ЗагрузитьФайл";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--file";
    НоваяСтрока.Описание    = "Файл для загрузки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ЗагрузитьФайл";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--rewrite";
    НоваяСтрока.Описание    = "Перезаписывать, если файл с таким именем уже существует (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ЗагрузитьФайлПоURL";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛПОURL";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Загружает файл на диск, забирая его по заданному URL";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ЗагрузитьФайлПоURL";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛПОURL";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь помещения загруженного файла";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ЗагрузитьФайлПоURL";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛПОURL";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "URL файла";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ОпубликоватьОбъект";
    НоваяСтрока.МетодПоиска = "ОПУБЛИКОВАТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Публикует объект диска в публичный доступ";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ОпубликоватьОбъект";
    НоваяСтрока.МетодПоиска = "ОПУБЛИКОВАТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь к публикуемому объекту";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ОтменитьПубликациюОбъекта";
    НоваяСтрока.МетодПоиска = "ОТМЕНИТЬПУБЛИКАЦИЮОБЪЕКТА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Отменяет публикацию ранее опубликованного объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ОтменитьПубликациюОбъекта";
    НоваяСтрока.МетодПоиска = "ОТМЕНИТЬПУБЛИКАЦИЮОБЪЕКТА";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь к опубликованному ранее объекту";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокОпубликованныхОбъектов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКОПУБЛИКОВАННЫХОБЪЕКТОВ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает список опубликованных объектов";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокОпубликованныхОбъектов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКОПУБЛИКОВАННЫХОБЪЕКТОВ";
    НоваяСтрока.Параметр    = "--amount";
    НоваяСтрока.Описание    = "Количество возвращаемых объектов (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСписокОпубликованныхОбъектов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКОПУБЛИКОВАННЫХОБЪЕКТОВ";
    НоваяСтрока.Параметр    = "--offset";
    НоваяСтрока.Описание    = "Смещение для получение объектов не из начала списка (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьПубличныйОбъект";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬПУБЛИЧНЫЙОБЪЕКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию об опубликованном объекте по его URL";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьПубличныйОбъект";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬПУБЛИЧНЫЙОБЪЕКТ";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "Адрес объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьПубличныйОбъект";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬПУБЛИЧНЫЙОБЪЕКТ";
    НоваяСтрока.Параметр    = "--amount";
    НоваяСтрока.Описание    = "Количество возвращаемых вложенных объектов (для каталога) (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьПубличныйОбъект";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬПУБЛИЧНЫЙОБЪЕКТ";
    НоваяСтрока.Параметр    = "--offset";
    НоваяСтрока.Описание    = "Смещение для получение вложенных объектов не из начала списка (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСсылкуСкачиванияПубличногоОбъекта";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬССЫЛКУСКАЧИВАНИЯПУБЛИЧНОГООБЪЕКТА";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает прямую ссылку для скачивания публичного объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСсылкуСкачиванияПубличногоОбъекта";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬССЫЛКУСКАЧИВАНИЯПУБЛИЧНОГООБЪЕКТА";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "Адрес объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "ПолучитьСсылкуСкачиванияПубличногоОбъекта";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬССЫЛКУСКАЧИВАНИЯПУБЛИЧНОГООБЪЕКТА";
    НоваяСтрока.Параметр    = "--path";
    НоваяСтрока.Описание    = "Путь внутри объекта (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СохранитьПубличныйОбъектНаДиск";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬПУБЛИЧНЫЙОБЪЕКТНАДИСК";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Сохраняет публичный объект на ваш диск";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СохранитьПубличныйОбъектНаДиск";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬПУБЛИЧНЫЙОБЪЕКТНАДИСК";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "Адрес объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СохранитьПубличныйОбъектНаДиск";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬПУБЛИЧНЫЙОБЪЕКТНАДИСК";
    НоваяСтрока.Параметр    = "--from";
    НоваяСтрока.Описание    = "Путь внутри публичного каталога (только для папок) (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "yadisk";
    НоваяСтрока.Модуль      = "OPI_YandexDisk";
    НоваяСтрока.Метод       = "СохранитьПубличныйОбъектНаДиск";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬПУБЛИЧНЫЙОБЪЕКТНАДИСК";
    НоваяСтрока.Параметр    = "--to";
    НоваяСтрока.Описание    = "Путь сохранения файла (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьСсылкуПолученияТокена";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬССЫЛКУПОЛУЧЕНИЯТОКЕНА";
    НоваяСтрока.Параметр    = "--app";
    НоваяСтрока.Описание    = "app_id из настроек приложения";
    НоваяСтрока.ОписаниеМетода   = "Получение ссылки для интерактивного получения токена (access_token), который необходим
    |    для дальнейших действий";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПост";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОСТ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст поста";
    НоваяСтрока.ОписаниеМетода   = "Создает пост с картинками
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПост";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОСТ";
    НоваяСтрока.Параметр    = "--pictures";
    НоваяСтрока.Описание    = "Массив картинок";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПост";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОСТ";
    НоваяСтрока.Параметр    = "--ad";
    НоваяСтрока.Описание    = "Признак ""Это реклама"" (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПост";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОСТ";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "Ссылка (URL) под записью (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПост";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОСТ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьПост";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬПОСТ";
    НоваяСтрока.Параметр    = "--post";
    НоваяСтрока.Описание    = "ID поста";
    НоваяСтрока.ОписаниеМетода   = "Удаляет пост по id
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьПост";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬПОСТ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬОПРОС";
    НоваяСтрока.Параметр    = "--question";
    НоваяСтрока.Описание    = "Вопрос опроса";
    НоваяСтрока.ОписаниеМетода   = "Создает опрос с вариантами ответа
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬОПРОС";
    НоваяСтрока.Параметр    = "--options";
    НоваяСтрока.Описание    = "Массив вариантов ответа";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬОПРОС";
    НоваяСтрока.Параметр    = "--picture";
    НоваяСтрока.Описание    = "Картинка опроса (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬОПРОС";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьАльбом";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬАЛЬБОМ";
    НоваяСтрока.Параметр    = "--name";
    НоваяСтрока.Описание    = "Наименование альбома";
    НоваяСтрока.ОписаниеМетода   = "Создает альбом для хранения картинок
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьАльбом";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬАЛЬБОМ";
    НоваяСтрока.Параметр    = "--description";
    НоваяСтрока.Описание    = "Описание альбома (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьАльбом";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬАЛЬБОМ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьАльбом";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬАЛЬБОМ";
    НоваяСтрока.Параметр    = "--album";
    НоваяСтрока.Описание    = "ID альбома";
    НоваяСтрока.ОписаниеМетода   = "Удаляет ранее созданный альбом
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьАльбом";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬАЛЬБОМ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьИсторию";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬИСТОРИЮ";
    НоваяСтрока.Параметр    = "--picture";
    НоваяСтрока.Описание    = "Фон истории";
    НоваяСтрока.ОписаниеМетода   = "Создает историю из картинки
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьИсторию";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬИСТОРИЮ";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "URL для кнопки под историей (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьИсторию";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬИСТОРИЮ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СохранитьКартинкуВАльбом";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬКАРТИНКУВАЛЬБОМ";
    НоваяСтрока.Параметр    = "--album";
    НоваяСтрока.Описание    = "ID альбома";
    НоваяСтрока.ОписаниеМетода   = "Сохраняет картинку в альбом сообщества
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СохранитьКартинкуВАльбом";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬКАРТИНКУВАЛЬБОМ";
    НоваяСтрока.Параметр    = "--picture";
    НоваяСтрока.Описание    = "Файл картинки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СохранитьКартинкуВАльбом";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬКАРТИНКУВАЛЬБОМ";
    НоваяСтрока.Параметр    = "--description";
    НоваяСтрока.Описание    = "Описание картинки (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СохранитьКартинкуВАльбом";
    НоваяСтрока.МетодПоиска = "СОХРАНИТЬКАРТИНКУВАЛЬБОМ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьКартинку";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--pictureid";
    НоваяСтрока.Описание    = "ID картинки";
    НоваяСтрока.ОписаниеМетода   = "Удалить картинку из альбома
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьКартинку";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКАРТИНКУ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьОбсуждение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Наименование обсуждения";
    НоваяСтрока.ОписаниеМетода   = "Создает новое обсуждение
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьОбсуждение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст первого сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьОбсуждение";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ЗакрытьОбсуждение";
    НоваяСтрока.МетодПоиска = "ЗАКРЫТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID обсуждения";
    НоваяСтрока.ОписаниеМетода   = "Закрывает или удаляет обсуждение
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ЗакрытьОбсуждение";
    НоваяСтрока.МетодПоиска = "ЗАКРЫТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--remove";
    НоваяСтрока.Описание    = "Удалить полностью (Истина) или закрыть (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ЗакрытьОбсуждение";
    НоваяСтрока.МетодПоиска = "ЗАКРЫТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ОткрытьОбсуждение";
    НоваяСтрока.МетодПоиска = "ОТКРЫТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID обсуждения";
    НоваяСтрока.ОписаниеМетода   = "Открывает ранее закрытое обсуждение
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ОткрытьОбсуждение";
    НоваяСтрока.МетодПоиска = "ОТКРЫТЬОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьВОбсуждение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬВОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--topic";
    НоваяСтрока.Описание    = "ID обсуждения";
    НоваяСтрока.ОписаниеМетода   = "Добавляет сообщение в обсуждение от имени группы
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьВОбсуждение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬВОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьВОбсуждение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬВОБСУЖДЕНИЕ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПоставитьЛайк";
    НоваяСтрока.МетодПоиска = "ПОСТАВИТЬЛАЙК";
    НоваяСтрока.Параметр    = "--post";
    НоваяСтрока.Описание    = "ID поста";
    НоваяСтрока.ОписаниеМетода   = "Ставит лайк на пост
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПоставитьЛайк";
    НоваяСтрока.МетодПоиска = "ПОСТАВИТЬЛАЙК";
    НоваяСтрока.Параметр    = "--wall";
    НоваяСтрока.Описание    = "ID стены расположения поста (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПоставитьЛайк";
    НоваяСтрока.МетодПоиска = "ПОСТАВИТЬЛАЙК";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СделатьРепост";
    НоваяСтрока.МетодПоиска = "СДЕЛАТЬРЕПОСТ";
    НоваяСтрока.Параметр    = "--post";
    НоваяСтрока.Описание    = "ID поста";
    НоваяСтрока.ОписаниеМетода   = "Делает репост записи
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СделатьРепост";
    НоваяСтрока.МетодПоиска = "СДЕЛАТЬРЕПОСТ";
    НоваяСтрока.Параметр    = "--from";
    НоваяСтрока.Описание    = "ID стены расположения поста (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СделатьРепост";
    НоваяСтрока.МетодПоиска = "СДЕЛАТЬРЕПОСТ";
    НоваяСтрока.Параметр    = "--to";
    НоваяСтрока.Описание    = "ID целевой стены или группы (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СделатьРепост";
    НоваяСтрока.МетодПоиска = "СДЕЛАТЬРЕПОСТ";
    НоваяСтрока.Параметр    = "--ad";
    НоваяСтрока.Описание    = "Признак рекламного поста (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СделатьРепост";
    НоваяСтрока.МетодПоиска = "СДЕЛАТЬРЕПОСТ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьСообщение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст сообщения";
    НоваяСтрока.ОписаниеМетода   = "Написать сообщение пользователю в диалоге сообщества
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьСообщение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID пользователя адресата";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьСообщение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--ct";
    НоваяСтрока.Описание    = "Токен бота чата сообщества, котрый можно получить в настройках";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьСообщение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--keyboard";
    НоваяСтрока.Описание    = "JSON клавиатуры. См.СформироватьКлавиатуру (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьСообщение";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬСООБЩЕНИЕ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьКомментарий";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--post";
    НоваяСтрока.Описание    = "ID целевого поста";
    НоваяСтрока.ОписаниеМетода   = "Создает комментарий под выбранной записью
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьКомментарий";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--wall";
    НоваяСтрока.Описание    = "ID стены расположения поста";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьКомментарий";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст комментария";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "НаписатьКомментарий";
    НоваяСтрока.МетодПоиска = "НАПИСАТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СократитьСсылку";
    НоваяСтрока.МетодПоиска = "СОКРАТИТЬССЫЛКУ";
    НоваяСтрока.Параметр    = "--url";
    НоваяСтрока.Описание    = "URL для сокращения";
    НоваяСтрока.ОписаниеМетода   = "Создает сокращенный URL из обычного
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СократитьСсылку";
    НоваяСтрока.МетодПоиска = "СОКРАТИТЬССЫЛКУ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСтатистику";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСТАТИСТИКУ";
    НоваяСтрока.Параметр    = "--datefrom";
    НоваяСтрока.Описание    = "Дата начала периода";
    НоваяСтрока.ОписаниеМетода   = "Получает общую статистику сообщества за период
    |    Дата указывается в формате ISO 8601:
    |    ""2024-04-07""
    |    ""2024-04-07T13:34:42+00:00"" 
    |    ""2024-04-07T13:34:42Z""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСтатистику";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСТАТИСТИКУ";
    НоваяСтрока.Параметр    = "--dateto";
    НоваяСтрока.Описание    = "Дата окончания периода";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСтатистику";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСТАТИСТИКУ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСтатистикуПостов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСТАТИСТИКУПОСТОВ";
    НоваяСтрока.Параметр    = "--posts";
    НоваяСтрока.Описание    = "Массив ID постов";
    НоваяСтрока.ОписаниеМетода   = "Получает статистику в разрезе постов
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСтатистикуПостов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСТАТИСТИКУПОСТОВ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламнуюКампанию";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНУЮКАМПАНИЮ";
    НоваяСтрока.Параметр    = "--cabinet";
    НоваяСтрока.Описание    = "ID рекламного кабинета";
    НоваяСтрока.ОписаниеМетода   = "Создает кампанию в выбранном рекламном кабинете
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламнуюКампанию";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНУЮКАМПАНИЮ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Наименование кампании";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламнуюКампанию";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНУЮКАМПАНИЮ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--campaign";
    НоваяСтрока.Описание    = "ID рекламной кампании";
    НоваяСтрока.ОписаниеМетода   = "Создает рекламное объявление на основе поста
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--limit";
    НоваяСтрока.Описание    = "Дневной лимит в рублях";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--category";
    НоваяСтрока.Описание    = "Номер рекламной категории";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--post";
    НоваяСтрока.Описание    = "ID поста, используемого в качетсве рекламы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--cabinet";
    НоваяСтрока.Описание    = "ID рекламного кабинета";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПриостановитьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "ПРИОСТАНОВИТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--cabinet";
    НоваяСтрока.Описание    = "ID рекламного кабинета";
    НоваяСтрока.ОписаниеМетода   = "Приостанавливает показ рекламного объявления
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПриостановитьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "ПРИОСТАНОВИТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--adv";
    НоваяСтрока.Описание    = "ID объявления";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПриостановитьРекламноеОбъявление";
    НоваяСтрока.МетодПоиска = "ПРИОСТАНОВИТЬРЕКЛАМНОЕОБЪЯВЛЕНИЕ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСписокРекламныхКатегорий";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКРЕКЛАМНЫХКАТЕГОРИЙ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Получает список id рекламных категорий для создания рекламного объявления
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСписокКатегорийТоваров";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОККАТЕГОРИЙТОВАРОВ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Получает список ID товарных категорий для указания при создании товара
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСписокТоваров";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКТОВАРОВ";
    НоваяСтрока.Параметр    = "--sel";
    НоваяСтрока.Описание    = "ID подборки, если нужен отбор (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Получает список товаров сообщества
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСписокТоваров";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКТОВАРОВ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьТоварыПоИД";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬТОВАРЫПОИД";
    НоваяСтрока.Параметр    = "--items";
    НоваяСтрока.Описание    = "Массив ID товаров";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию о товарах по массиву ID
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьТоварыПоИД";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬТОВАРЫПОИД";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьТовар";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬТОВАР";
    НоваяСтрока.Параметр    = "--product";
    НоваяСтрока.Описание    = "JSON описание товара или путь";
    НоваяСтрока.ОписаниеМетода   = "Добавляет новый товар в каталог сообщества
    |
    |    Структура JSON данных описания товара (параметр --product):
    |    {
    |     ""Имя""                : ""Новый товар"",
    |     ""Описание""           : ""Описание товара"",
    |     ""Категория""          : ""20173"",
    |     ""Цена""               : 1,
    |     ""СтараяЦена""         : """",
    |     ""ОсновноеФото""       : """",
    |     ""URL""                : """",
    |     ""ДополнительныеФото"" : [],
    |     ""ЗначенияСвойств""    : [],
    |     ""ГлавныйВГруппе""     : ""Ложь"",
    |     ""Ширина""             : """",
    |     ""Высота""             : """",
    |     ""Глубина""            : """",
    |     ""Вес""                : """",
    |     ""SKU""                : """",
    |     ""ДоступныйОстаток""   : ""1""
    |    }
    |
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьТовар";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬТОВАР";
    НоваяСтрока.Параметр    = "--sel";
    НоваяСтрока.Описание    = "ID подборка для помещения товара, если необходимо (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьТовар";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬТОВАР";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьТовар";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТОВАР";
    НоваяСтрока.Параметр    = "--item";
    НоваяСтрока.Описание    = "Идентификатор изменяемого товара";
    НоваяСтрока.ОписаниеМетода   = "Изменяет ранее созданный товар
    |
    |    Структура JSON данных описания товара (параметр --product):
    |    {
    |     ""Имя""                : ""Новый товар"",
    |     ""Описание""           : ""Описание товара"",
    |     ""Категория""          : ""20173"",
    |     ""Цена""               : 1,
    |     ""СтараяЦена""         : """",
    |     ""ОсновноеФото""       : """",
    |     ""URL""                : """",
    |     ""ДополнительныеФото"" : [],
    |     ""ЗначенияСвойств""    : [],
    |     ""ГлавныйВГруппе""     : ""Ложь"",
    |     ""Ширина""             : """",
    |     ""Высота""             : """",
    |     ""Глубина""            : """",
    |     ""Вес""                : """",
    |     ""SKU""                : """",
    |     ""ДоступныйОстаток""   : ""1""
    |    }
    |
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьТовар";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТОВАР";
    НоваяСтрока.Параметр    = "--product";
    НоваяСтрока.Описание    = "JSON описание товара или путь";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьТовар";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТОВАР";
    НоваяСтрока.Параметр    = "--sel";
    НоваяСтрока.Описание    = "Идентификатор новой подборки, если необходимо (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьТовар";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬТОВАР";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьТовар";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТОВАР";
    НоваяСтрока.Параметр    = "--item";
    НоваяСтрока.Описание    = "ID товара";
    НоваяСтрока.ОписаниеМетода   = "Удаляет ранее созданный товар
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьТовар";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТОВАР";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СгруппироватьТовары";
    НоваяСтрока.МетодПоиска = "СГРУППИРОВАТЬТОВАРЫ";
    НоваяСтрока.Параметр    = "--items";
    НоваяСтрока.Описание    = "Массив ID товаров";
    НоваяСтрока.ОписаниеМетода   = "|    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СгруппироватьТовары";
    НоваяСтрока.МетодПоиска = "СГРУППИРОВАТЬТОВАРЫ";
    НоваяСтрока.Параметр    = "--sellgroup";
    НоваяСтрока.Описание    = "ID существующей группы, если необходимо (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СгруппироватьТовары";
    НоваяСтрока.МетодПоиска = "СГРУППИРОВАТЬТОВАРЫ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСписокПодборок";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКПОДБОРОК";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Получает список подборок товаров
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьПодборкиПоИД";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬПОДБОРКИПОИД";
    НоваяСтрока.Параметр    = "--sels";
    НоваяСтрока.Описание    = "ID подборок";
    НоваяСтрока.ОписаниеМетода   = "Получить список подборок по массиву ID
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьПодборкиПоИД";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬПОДБОРКИПОИД";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Название подборки";
    НоваяСтрока.ОписаниеМетода   = "Создает пустую подборку товаров
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--picture";
    НоваяСтрока.Описание    = "Файл картинки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--main";
    НоваяСтрока.Описание    = "Основная (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--hidden";
    НоваяСтрока.Описание    = "Скрытая (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Новое название подборки";
    НоваяСтрока.ОписаниеМетода   = "Изменяет свойства подборки товаров
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--sel";
    НоваяСтрока.Описание    = "ID подборки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--picture";
    НоваяСтрока.Описание    = "Новая картинка подборки (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--main";
    НоваяСтрока.Описание    = "Основная (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--hidden";
    НоваяСтрока.Описание    = "Скрытая (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьПодборкуТоваров";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬПОДБОРКУТОВАРОВ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьТоварВПодборку";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬТОВАРВПОДБОРКУ";
    НоваяСтрока.Параметр    = "--items";
    НоваяСтрока.Описание    = "Массив товаров или товар";
    НоваяСтрока.ОписаниеМетода   = "Добавляет товар в подборку
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьТоварВПодборку";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬТОВАРВПОДБОРКУ";
    НоваяСтрока.Параметр    = "--sel";
    НоваяСтрока.Описание    = "ID подборки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьТоварВПодборку";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬТОВАРВПОДБОРКУ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьТоварИзПодборки";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТОВАРИЗПОДБОРКИ";
    НоваяСтрока.Параметр    = "--item";
    НоваяСтрока.Описание    = "ID товара";
    НоваяСтрока.ОписаниеМетода   = "Удаляет ранее добавленный товар из подборки
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьТоварИзПодборки";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТОВАРИЗПОДБОРКИ";
    НоваяСтрока.Параметр    = "--sel";
    НоваяСтрока.Описание    = "ID подборки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьТоварИзПодборки";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬТОВАРИЗПОДБОРКИ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьПодборку";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬПОДБОРКУ";
    НоваяСтрока.Параметр    = "--sel";
    НоваяСтрока.Описание    = "ID подборки";
    НоваяСтрока.ОписаниеМетода   = "Удаляет подборку по ID
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьПодборку";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬПОДБОРКУ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСписокСвойств";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКСВОЙСТВ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Получает список свойств товаров группы
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьСвойствоТовара";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСВОЙСТВОТОВАРА";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Название свойства";
    НоваяСтрока.ОписаниеМетода   = "Создает новое свойство для использования в товарах
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СоздатьСвойствоТовара";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСВОЙСТВОТОВАРА";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьСвойствоТовара";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВОТОВАРА";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Новое название";
    НоваяСтрока.ОписаниеМетода   = "Изменяет существующее свойство товара
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьСвойствоТовара";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВОТОВАРА";
    НоваяСтрока.Параметр    = "--prop";
    НоваяСтрока.Описание    = "ID свойства";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьСвойствоТовара";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВОТОВАРА";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьСвойствоТовара";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬСВОЙСТВОТОВАРА";
    НоваяСтрока.Параметр    = "--prop";
    НоваяСтрока.Описание    = "ID свойства";
    НоваяСтрока.ОписаниеМетода   = "Удаляет существующее свойство товара
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьСвойствоТовара";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬСВОЙСТВОТОВАРА";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--value";
    НоваяСтрока.Описание    = "Значение свойства";
    НоваяСтрока.ОписаниеМетода   = "Добавляет вариант для существующего свойства
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--prop";
    НоваяСтрока.Описание    = "ID свойства, куда добавляется вариант";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ДобавитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "ДОБАВИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--value";
    НоваяСтрока.Описание    = "Новое значение свойства";
    НоваяСтрока.ОписаниеМетода   = "|
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--prop";
    НоваяСтрока.Описание    = "ID свойства";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--option";
    НоваяСтрока.Описание    = "ID варианта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ИзменитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--option";
    НоваяСтрока.Описание    = "ID варианта";
    НоваяСтрока.ОписаниеМетода   = "Удаляет ранее созданный вариант свойства
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "УдалитьВариантСвойстваТовара";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬВАРИАНТСВОЙСТВАТОВАРА";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "ПолучитьСписокЗаказов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКЗАКАЗОВ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Возвращает список заказов сообщества
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""access_token"": """",       // Можно получить в браузере по URL из функции СоздатьСсылкуПолученияТокена()
    |     ""owner_id""    : """",       // id группы с ""-"" в начале. Можно найти в настройках группы ВК или в ее URL
    |     ""app_id""      : """",       // id приложения, которое необходимо создать в профиле на странице для разработчиков
    |     ""group_id""    : """"        // owner_id, но без ""-""
    |    }
    |
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "vk";
    НоваяСтрока.Модуль      = "OPI_VK";
    НоваяСтрока.Метод       = "СформироватьКлавиатуру";
    НоваяСтрока.МетодПоиска = "СФОРМИРОВАТЬКЛАВИАТУРУ";
    НоваяСтрока.Параметр    = "--buttons";
    НоваяСтрока.Описание    = "Массив заголовков кнопок";
    НоваяСтрока.ОписаниеМетода   = "Формирует клавиатуру по массиву кнопок
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьИнформациюОбОбъекте";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬИНФОРМАЦИЮОБОБЪЕКТЕ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию о папке или файле по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокКаталогов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОККАТАЛОГОВ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает список каталогов диска";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокКаталогов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОККАТАЛОГОВ";
    НоваяСтрока.Параметр    = "--querry";
    НоваяСтрока.Описание    = "Отбор по имени (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокКаталогов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОККАТАЛОГОВ";
    НоваяСтрока.Параметр    = "--depth";
    НоваяСтрока.Описание    = "Добавляет список файлов к полям каталога (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает список файлов";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--querry";
    НоваяСтрока.Описание    = "Отбор по имени (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокФайлов";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОКФАЙЛОВ";
    НоваяСтрока.Параметр    = "--catalog";
    НоваяСтрока.Описание    = "Отбор по ID каталога родителя (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ЗагрузитьФайл";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Загружает файл на диск
    |
    |    Структура JSON данных объекта (параметр --props):
    |    {
    |     ""MIME""        , ""image/jpeg"");       // MIME-тип загружаемого файла
    |     ""Имя""         , ""Новый файл.jpg"");   // Имя файла с расширением
    |     ""Описание""    , ""Это новый файл"");   // Описание файла
    |     ""Родитель""    , ""root"");             // ID каталога загрузки или ""root"" для загрузки в корень
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ЗагрузитьФайл";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--file";
    НоваяСтрока.Описание    = "Загружаемый файл";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ЗагрузитьФайл";
    НоваяСтрока.МетодПоиска = "ЗАГРУЗИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--props";
    НоваяСтрока.Описание    = "JSON описания или путь к .json";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СоздатьПапку";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПАПКУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает пустой каталог на диске";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СоздатьПапку";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПАПКУ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Имя папки";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СоздатьПапку";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬПАПКУ";
    НоваяСтрока.Параметр    = "--catalog";
    НоваяСтрока.Описание    = "Родитель (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СкачатьФайл";
    НоваяСтрока.МетодПоиска = "СКАЧАТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает файл по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СкачатьФайл";
    НоваяСтрока.МетодПоиска = "СКАЧАТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор файла";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СкопироватьОбъект";
    НоваяСтрока.МетодПоиска = "СКОПИРОВАТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Копирует файл или каталог";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СкопироватьОбъект";
    НоваяСтрока.МетодПоиска = "СКОПИРОВАТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СкопироватьОбъект";
    НоваяСтрока.МетодПоиска = "СКОПИРОВАТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Новое имя объекта (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СкопироватьОбъект";
    НоваяСтрока.МетодПоиска = "СКОПИРОВАТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--catalog";
    НоваяСтрока.Описание    = "Новый каталог размещения (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ОбновитьФайл";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Обновляет двоичные данные файла";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ОбновитьФайл";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор обновляемого объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ОбновитьФайл";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--file";
    НоваяСтрока.Описание    = "Файл источник обновления";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ОбновитьФайл";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬФАЙЛ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Новое имя файла (если необходимо) (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "УдалитьОбъект";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет файл или каталог по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "УдалитьОбъект";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬОБЪЕКТ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор объекта для удаления";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СоздатьКомментарий";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает комментарий к файлу или каталогу";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СоздатьКомментарий";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор объекта, для которого необходим комментарий";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "СоздатьКомментарий";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст комментария";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьКомментарий";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает комментарий по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьКомментарий";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор файла или каталога размещения комментария";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьКомментарий";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--comment";
    НоваяСтрока.Описание    = "Идентификатор комментария";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокКомментариев";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОККОММЕНТАРИЕВ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает список всех комментариев объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "ПолучитьСписокКомментариев";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСПИСОККОММЕНТАРИЕВ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор объекта";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "УдалитьКомментарий";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет комментарий по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "УдалитьКомментарий";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--object";
    НоваяСтрока.Описание    = "Идентификатор файла или каталога размещения комментария";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "gdrive";
    НоваяСтрока.Модуль      = "OPI_GoogleDrive";
    НоваяСтрока.Метод       = "УдалитьКомментарий";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬКОММЕНТАРИЙ";
    НоваяСтрока.Параметр    = "--comment";
    НоваяСтрока.Описание    = "Идентификатор комментария";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "ПолучитьСсылкуАвторизации";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬССЫЛКУАВТОРИЗАЦИИ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Формирует ссылку для авторизации через браузер
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "ПолучитьТокен";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--code";
    НоваяСтрока.Описание    = "Код, полученный из авторизации См.ПолучитьСсылкуАвторизации";
    НоваяСтрока.ОписаниеМетода   = "Получает токен по коду, полученному при авторизации по ссылке из ПолучитьСсылкуАвторизации
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "ПолучитьТокен";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "ОбновитьТокен";
    НоваяСтрока.МетодПоиска = "ОБНОВИТЬТОКЕН";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";
    НоваяСтрока.ОписаниеМетода   = "Обновляет v2 токен при помощи refresh_token
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТекстовыйТвит";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТЕКСТОВЫЙТВИТ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст твита";
    НоваяСтрока.ОписаниеМетода   = "Создает твит без вложений
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТекстовыйТвит";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТЕКСТОВЫЙТВИТ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитКартинки";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТКАРТИНКИ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст твита";
    НоваяСтрока.ОписаниеМетода   = "Создает твит с картинкой вложением
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитКартинки";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТКАРТИНКИ";
    НоваяСтрока.Параметр    = "--pictures";
    НоваяСтрока.Описание    = "Массив файлов картинок";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитКартинки";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТКАРТИНКИ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитГифки";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТГИФКИ";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст твита";
    НоваяСтрока.ОписаниеМетода   = "Создает твит с вложением-гифкой
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитГифки";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТГИФКИ";
    НоваяСтрока.Параметр    = "--gifs";
    НоваяСтрока.Описание    = "Массив файлов гифок";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитГифки";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТГИФКИ";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитВидео";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТВИДЕО";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст твита";
    НоваяСтрока.ОписаниеМетода   = "Создает твит с видеовложением
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитВидео";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТВИДЕО";
    НоваяСтрока.Параметр    = "--videos";
    НоваяСтрока.Описание    = "Массив файлов видео";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитВидео";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТВИДЕО";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТОПРОС";
    НоваяСтрока.Параметр    = "--text";
    НоваяСтрока.Описание    = "Текст твита";
    НоваяСтрока.ОписаниеМетода   = "Создает твит с опросом
    |    Пример указания параметра типа массив:
    |    --param ""['Val1','Val2','Val3']""
    |
    |
    |    Структура JSON данных авторизации (параметр --auth):
    |    {
    |     ""redirect_uri""            : """",  // URL вашего http-сервиса (или другого обработчика запросов) для авторизации
    |     ""client_id""               : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""client_secret""           : """",  // Из OAuth 2.0 Client ID and Client Secret страницы настроек Twitter Developer
    |     ""access_token""            : """",  // ПолучитьСсылкуАвторизации() -> Браузер -> code придет на redirect_uri -> ПолучитьТокен(code)
    |     ""refresh_token""           : """",  // Приходит вместе с access_token и используется для его обновления (время жизни access_token - 2 ч)
    |     ""oauth_token""             : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_token_secret""      : """",  // Из Authentication Tokens -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_key""      : """",  // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |     ""oauth_consumer_secret""   : """"   // Из Consumer Keys -> Access Token and Secret страницы настроек Twitter Developer
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТОПРОС";
    НоваяСтрока.Параметр    = "--options";
    НоваяСтрока.Описание    = "Массив вариантов опроса";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТОПРОС";
    НоваяСтрока.Параметр    = "--duration";
    НоваяСтрока.Описание    = "Длительность опроса";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "twitter";
    НоваяСтрока.Модуль      = "OPI_Twitter";
    НоваяСтрока.Метод       = "СоздатьТвитОпрос";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬТВИТОПРОС";
    НоваяСтрока.Параметр    = "--auth";
    НоваяСтрока.Описание    = "JSON авторизации или путь к .json (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьСтраницу";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСТРАНИЦУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает дочернюю страницу над другой страницей-родителем";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьСтраницу";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСТРАНИЦУ";
    НоваяСтрока.Параметр    = "--page";
    НоваяСтрока.Описание    = "ID Родителя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьСтраницу";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСТРАНИЦУ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Заголовок страницы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьСтраницуВБазу";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСТРАНИЦУВБАЗУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает страницу в базе-родителе
    |
    |    Структура JSON данных страницы (параметр --data):
    |    {
    |     ""Имя поля БД 1""  : ""Значение1"",
    |     ""Имя поля БД 2""  : ""Значение2"",
    |     ...
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьСтраницуВБазу";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСТРАНИЦУВБАЗУ";
    НоваяСтрока.Параметр    = "--base";
    НоваяСтрока.Описание    = "ID родительской базы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьСтраницуВБазу";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬСТРАНИЦУВБАЗУ";
    НоваяСтрока.Параметр    = "--data";
    НоваяСтрока.Описание    = "Соответствие свойств";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ПолучитьСтраницу";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСТРАНИЦУ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает информацию о странице по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ПолучитьСтраницу";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬСТРАНИЦУ";
    НоваяСтрока.Параметр    = "--page";
    НоваяСтрока.Описание    = "ID страницы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваСтраницы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАСТРАНИЦЫ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "|
    |    Структура JSON данных страницы (параметр --data):
    |    {
    |     ""Имя поля БД 1""  : ""Значение1"",
    |     ""Имя поля БД 2""  : ""Значение2"",
    |     ...
    |    }
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваСтраницы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАСТРАНИЦЫ";
    НоваяСтрока.Параметр    = "--page";
    НоваяСтрока.Описание    = "ID изменяемой страницы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваСтраницы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАСТРАНИЦЫ";
    НоваяСтрока.Параметр    = "--data";
    НоваяСтрока.Описание    = "Соответствие изменяемых параметров (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваСтраницы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАСТРАНИЦЫ";
    НоваяСтрока.Параметр    = "--icon";
    НоваяСтрока.Описание    = "URL картинки иконки страницы (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваСтраницы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАСТРАНИЦЫ";
    НоваяСтрока.Параметр    = "--cover";
    НоваяСтрока.Описание    = "URL картинки обложки страницы (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваСтраницы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАСТРАНИЦЫ";
    НоваяСтрока.Параметр    = "--archive";
    НоваяСтрока.Описание    = "Архивировать страницу или нет (булево) (необяз. по ум. - False)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБазуДанных";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБАЗУДАННЫХ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает базу данных
    |
    |    Структура JSON полей базы (параметр --props):
    |    {
    |     ""Имя поля БД c обычным типом""     : ""Тип данных 1"",
    |     ""Имя поля БД с выбором значения""  : 
    |        {
    |         ""Вариант1""  : ""green"",
    |         ""Вариант2""  : ""red"",
    |         ...
    |        },
    |     ...
    |    }
    |    
    |    Доуступные типы: title(ключевой), rich_text, number, status,
    |    date, files, checkbox, url, email, phone_number, people
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБазуДанных";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБАЗУДАННЫХ";
    НоваяСтрока.Параметр    = "--page";
    НоваяСтрока.Описание    = "ID страницы родителя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБазуДанных";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБАЗУДАННЫХ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Заголовок базы данных";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБазуДанных";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБАЗУДАННЫХ";
    НоваяСтрока.Параметр    = "--props";
    НоваяСтрока.Описание    = "Свойства базы данных (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ПолучитьБазуДанных";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬБАЗУДАННЫХ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получить данные о базе данных";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ПолучитьБазуДанных";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬБАЗУДАННЫХ";
    НоваяСтрока.Параметр    = "--base";
    НоваяСтрока.Описание    = "ID базы данных";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваБазы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАБАЗЫ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Изменяет свойства существующей базы
    |
    |    Структура JSON полей базы (параметр --props):
    |    {
    |     ""Имя поля БД c обычным типом""     : ""Тип данных 1"",
    |     ""Имя поля БД с выбором значения""  : 
    |        {
    |         ""Вариант1""  : ""green"",
    |         ""Вариант2""  : ""red"",
    |         ...
    |        },
    |     ...
    |    }
    |    
    |    Доуступные типы: title(ключевой), rich_text, number, status,
    |    date, files, checkbox, url, email, phone_number, people
    |";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваБазы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАБАЗЫ";
    НоваяСтрока.Параметр    = "--base";
    НоваяСтрока.Описание    = "ID целевой базы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваБазы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАБАЗЫ";
    НоваяСтрока.Параметр    = "--props";
    НоваяСтрока.Описание    = "Новые или изменяемые свойства базы данных (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваБазы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАБАЗЫ";
    НоваяСтрока.Параметр    = "--title";
    НоваяСтрока.Описание    = "Новый заголовок базы (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ИзменитьСвойстваБазы";
    НоваяСтрока.МетодПоиска = "ИЗМЕНИТЬСВОЙСТВАБАЗЫ";
    НоваяСтрока.Параметр    = "--description";
    НоваяСтрока.Описание    = "Новое описание базы (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБлок";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБЛОК";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Создает новый блок на основе существующего блока";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБлок";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБЛОК";
    НоваяСтрока.Параметр    = "--page";
    НоваяСтрока.Описание    = "ID родительского блока или страницы";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБлок";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБЛОК";
    НоваяСтрока.Параметр    = "--образец";
    НоваяСтрока.Описание    = "block";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СоздатьБлок";
    НоваяСтрока.МетодПоиска = "СОЗДАТЬБЛОК";
    НоваяСтрока.Параметр    = "--prev";
    НоваяСтрока.Описание    = "ID блока, после которого необходимо встаивть новый (необяз. по ум. - Пустое значение)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ВернутьБлок";
    НоваяСтрока.МетодПоиска = "ВЕРНУТЬБЛОК";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ВернутьБлок";
    НоваяСтрока.МетодПоиска = "ВЕРНУТЬБЛОК";
    НоваяСтрока.Параметр    = "--block";
    НоваяСтрока.Описание    = "ID блока";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ВернутьБлок";
    НоваяСтрока.МетодПоиска = "ВЕРНУТЬБЛОК";
    НоваяСтрока.Параметр    = "--core";
    НоваяСтрока.Описание    = "Истина > служебные поля удаляются, остается только сам блок (необяз. по ум. - True)";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ВернутьДочерниеБлоки";
    НоваяСтрока.МетодПоиска = "ВЕРНУТЬДОЧЕРНИЕБЛОКИ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Созвращает список дочерних блоков блока-родителя";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ВернутьДочерниеБлоки";
    НоваяСтрока.МетодПоиска = "ВЕРНУТЬДОЧЕРНИЕБЛОКИ";
    НоваяСтрока.Параметр    = "--родителя";
    НоваяСтрока.Описание    = "block";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "УдалитьБлок";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬБЛОК";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Удаляет блок по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "УдалитьБлок";
    НоваяСтрока.МетодПоиска = "УДАЛИТЬБЛОК";
    НоваяСтрока.Параметр    = "--block";
    НоваяСтрока.Описание    = "ID блока";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "СписокПользователей";
    НоваяСтрока.МетодПоиска = "СПИСОКПОЛЬЗОВАТЕЛЕЙ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Возвращает список пользователей рабочего пространства";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ПолучитьДанныеПользователя";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬДАННЫЕПОЛЬЗОВАТЕЛЯ";
    НоваяСтрока.Параметр    = "--token";
    НоваяСтрока.Описание    = "Токен";
    НоваяСтрока.ОписаниеМетода   = "Получает данные пользователя по ID";


    НоваяСтрока = ТаблицаСостава.Добавить();
    НоваяСтрока.Библиотека  = "notion";
    НоваяСтрока.Модуль      = "OPI_Notion";
    НоваяСтрока.Метод       = "ПолучитьДанныеПользователя";
    НоваяСтрока.МетодПоиска = "ПОЛУЧИТЬДАННЫЕПОЛЬЗОВАТЕЛЯ";
    НоваяСтрока.Параметр    = "--user";
    НоваяСтрока.Описание    = "ID целевого пользователя";

    Возврат ТаблицаСостава;
КонецФункции

