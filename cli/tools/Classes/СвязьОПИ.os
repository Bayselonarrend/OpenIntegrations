#Использовать "../../data"

Перем СоответствиеТаблицПараметров;
Перем СоответствиеКомандМодулей;
Перем ДополнениеОписанияПараметров Экспорт;

Процедура ПриСозданииОбъекта()
    
    СоответствиеТаблицПараметров = Новый Соответствие();
    СоответствиеКомандМодулей    = Новый Соответствие();

    ТаблицаСостава               = СоставБиблиотеки.ПолучитьСостав();
    ТекущаяБиблиотека            = "";
    ТекущаяТаблица               = "";

    СформироватьДополненяОписаний();

    Для Каждого СтрокаСостава Из ТаблицаСостава Цикл

        Если ТекущаяБиблиотека <> СтрокаСостава.Библиотека Тогда
            
            Если ЗначениеЗаполнено(ТекущаяБиблиотека) Тогда
                СоответствиеТаблицПараметров.Вставить(ТекущаяБиблиотека, ТекущаяТаблица);
            КонецЕсли;

            ТекущаяБиблиотека = СтрокаСостава.Библиотека;
            ТекущаяТаблица    = ПолучитьПустуюТаблицуПараметров();
            СоответствиеКомандМодулей.Вставить(СтрокаСостава.Библиотека, СтрокаСостава.Модуль);

        КонецЕсли;

        ЗаполнитьЗначенияСвойств(ТекущаяТаблица.Добавить(), СтрокаСостава);

    КонецЦикла;

    Если ЗначениеЗаполнено(ТекущаяБиблиотека) Тогда
        СоответствиеТаблицПараметров.Вставить(ТекущаяБиблиотека, ТекущаяТаблица);
    КонецЕсли;
    
КонецПроцедуры

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПустуюТаблицуПараметров() Экспорт
    
    ТПМ = Новый ТаблицаЗначений();
    
    ТПМ.Колонки.Добавить("Модуль");
    ТПМ.Колонки.Добавить("Метод");
    ТПМ.Колонки.Добавить("МетодПоиска");
    ТПМ.Колонки.Добавить("Параметр");
    ТПМ.Колонки.Добавить("Описание");
    ТПМ.Колонки.Добавить("Обработка");
    ТПМ.Колонки.Добавить("ОписаниеМетода");
 
    Возврат ТПМ;

КонецФункции

Функция ПолучитьИмяМодуля(Знач Команда = "") Экспорт

    Если ЗначениеЗаполнено(Команда) Тогда
        Значение = СоответствиеКомандМодулей[Команда];
    Иначе
        Значение = СоответствиеКомандМодулей;
    КонецЕсли;

    Если Не ЗначениеЗаполнено(Значение) Тогда
        ВызватьИсключение "Команда не найдена: " + Команда;
    Иначе
        Возврат Значение;
    КонецЕсли;

КонецФункции

Функция ПолучитьТаблицуПараметров(Знач Команда) Экспорт
    Возврат СоответствиеТаблицПараметров[Команда];
КонецФункции

Функция СформироватьДополненяОписаний()

    ТекстДополненияВК = "
        |       Структура JSON данных авторизации (параметр --auth):
        |       {
        |            ""access_token"": """",
        |            ""from_group""  : ""1"",
        |            ""owner_id""    : """",
        |            ""v""           : ""5.131"",
        |            ""app_id""      : """",
        |            ""group_id""    : """"
        |      }
        |";

    ДополнениеОписанияПараметров = Новый Соответствие;
    ДополнениеОписанияПараметров.Вставить("vk", ТекстДополненияВК);

КонецФункции

#КонецОбласти

ПриСозданииОбъекта();