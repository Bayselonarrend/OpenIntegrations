// Библиотека: Google Calendar
// Команда CLI: gcalendar

// MIT License

// Copyright (c) 2023 Anton Tsitavets

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/Bayselonarrend/OpenIntegrations

// BSLLS:LatinAndCyrillicSymbolInWord-off
// BSLLS:IncorrectLineBreak-off

// Раскомментировать, если выполняется OneScript
// #Использовать "../../tools"

#Область ПрограммныйИнтерфейс

#Область РаботаСТаблицами

Функция СоздатьКнигу(Знач Токен, Знач Наименование, Знач МассивИменЛистов) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Наименование);
    OPI_ПреобразованиеТипов.ПолучитьКоллекцию(МассивИменЛистов);
    
    Заголовки = OPI_GoogleWorkspace.ПолучитьЗаголовокАвторизации(Токен);
    URL       = "https://sheets.googleapis.com/v4/spreadsheets";
   
    Свойства  = Новый Структура("title" , Наименование);
    Листы     = Новый Массив;
    
    ЗаполнитьМассивЛистов(МассивИменЛистов, Листы);
    
    Параметры = Новый Структура;
    OPI_Инструменты.ДобавитьПоле("properties", Свойства, "Коллекция", Параметры);
    OPI_Инструменты.ДобавитьПоле("sheets"    , Листы   , "Коллекция", Параметры);
    
    Ответ = OPI_Инструменты.Post(URL, Параметры, Заголовки);
    
    Возврат Ответ;

КонецФункции

Функция ПолучитьКнигу(Знач Токен, Знач Идентификатор) Экспорт

    OPI_ПреобразованиеТипов.ПолучитьСтроку(Идентификатор); 
    
    Заголовки = OPI_GoogleWorkspace.ПолучитьЗаголовокАвторизации(Токен);
    URL       = "https://sheets.googleapis.com/v4/spreadsheets/" + Идентификатор;
    
    Ответ = OPI_Инструменты.Get(URL, , Заголовки);
    
    Возврат Ответ;

КонецФункции

#КонецОбласти

#Область РаботаСЛистами

Функция ДобавитьЛист(Знач Токен, Знач Книга, Знач Наименование) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Книга);
        
    Заголовки = OPI_GoogleWorkspace.ПолучитьЗаголовокАвторизации(Токен);
    URL       = "https://sheets.googleapis.com/v4/spreadsheets/" + Книга + ":batchUpdate";
    Лист      = СоздатьЛист(Наименование);
    
    Запросы   = Новый Массив;
    Изменение = Новый Структура("addSheet", Лист);
    Запросы.Добавить(Изменение);
    
    Параметры = Новый Структура("requests", Запросы);
    
    Ответ = OPI_Инструменты.Post(URL, Параметры, Заголовки);
    
    Возврат Ответ;

КонецФункции

Функция УдалитьЛист(Знач Токен, Знач Книга, Знач Лист) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Книга);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Лист);
        
    Заголовки = OPI_GoogleWorkspace.ПолучитьЗаголовокАвторизации(Токен);
    URL       = "https://sheets.googleapis.com/v4/spreadsheets/" + Книга + ":batchUpdate";
    
    Запросы   = Новый Массив;
    Лист      = Новый Структура("sheetId"    , Лист);
    Изменение = Новый Структура("deleteSheet", Лист);
    Запросы.Добавить(Изменение);
    
    Параметры = Новый Структура("requests", Запросы);
    
    Ответ = OPI_Инструменты.Post(URL, Параметры, Заголовки);
    
    Возврат Ответ;

КонецФункции

Функция КопироватьЛист(Знач Токен, Знач Откуда, Знач Куда, Знач Лист) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Откуда);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Куда);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Лист);
        
    Заголовки = OPI_GoogleWorkspace.ПолучитьЗаголовокАвторизации(Токен);
    URL       = "https://sheets.googleapis.com/v4/spreadsheets/"
        + Откуда
        + "/sheets/"
        + Лист
        + ":copyTo";
    
    Параметры = Новый Структура("destinationSpreadsheetId", Куда);  
    Ответ     = OPI_Инструменты.Post(URL, Параметры, Заголовки);
    
    Возврат Ответ;
   
КонецФункции

#КонецОбласти

#Область РаботаСДанными

Функция УстановитьЗначенияЯчеек(Знач Токен
    , Знач Книга
    , Знач Лист
    , Знач СоответствиеЗначений
    , Знач ОсновноеИзмерение = "COLOUMNS") Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Книга);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Лист);
    OPI_ПреобразованиеТипов.ПолучитьКоллекцию(СоответствиеЗначений);
    
    Если Не ТипЗнч(СоответствиеЗначений) = Тип("Структура")
        И Не ТипЗнч(СоответствиеЗначений) = Тип("Соответствие") Тогда
        Возврат "Не удалось привести структуру значений к коллекции";
    КонецЕсли;
    
    Заголовки    = OPI_GoogleWorkspace.ПолучитьЗаголовокАвторизации(Токен);
    URL          = "https://sheets.googleapis.com/v4/spreadsheets/" + Книга + "/values:batchUpdate";
    МассивДанных = СформироватьМассивДанныхЯчеек(СоответствиеЗначений, ОсновноеИзмерение);

    Параметры = Новый Структура("data,valueInputOption", МассивДанных, "USER_ENTERED");
    Ответ     = OPI_Инструменты.Post(URL, Параметры, Заголовки);
    
    Возврат Ответ;
    
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьМассивЛистов(Знач МассивИмен, МассивЛистов)
    
    Для Каждого ИмяЛиста Из МассивИмен Цикл
        
        Лист = СоздатьЛист(ИмяЛиста);
        МассивЛистов.Добавить(Лист);
        
    КонецЦикла;

КонецПроцедуры

Функция СоздатьЛист(Знач Наименование)
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Наименование);
    
    СвойстваЛиста = Новый Структура("title"     , Наименование);
    Лист          = Новый Структура("properties", СвойстваЛиста);

    Возврат Лист;
    
КонецФункции

Функция СформироватьМассивДанныхЯчеек(Знач СтруктураЗначений, Знач ОсновноеИзмерение)
    
    МассивДанных = Новый Массив;
    
    Для Каждого ДанныеЯчейки Из СтруктураЗначений Цикл
        
        ТекущееЗначение = ДанныеЯчейки.Значение;
        
        OPI_ПреобразованиеТипов.ПолучитьМассив(ТекущееЗначение);
        
        ТекущиеДанные   = Новый Соответствие;
        ТекущийМассив   = Новый Массив;
        
        ТекущийМассив.Добавить(ТекущееЗначение);
        
        OPI_Инструменты.ДобавитьПоле("range"         , ДанныеЯчейки.Ключ, "Строка", ТекущиеДанные);
        OPI_Инструменты.ДобавитьПоле("values"        , ТекущийМассив    , "Массив", ТекущиеДанные);
        OPI_Инструменты.ДобавитьПоле("majorDimension", ОсновноеИзмерение, "Строка", ТекущиеДанные);
        
        МассивДанных.Добавить(ТекущиеДанные);
        
    КонецЦикла;
    
    Возврат МассивДанных;
    
КонецФункции
#КонецОбласти