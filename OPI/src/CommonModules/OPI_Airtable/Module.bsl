// Библиотека: Airtable
// Команда CLI: Airtable

// MIT License

// Copyright (c) 2023 Anton Tsitavets

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/Bayselonarrend/OpenIntegrations

// BSLLS:IncorrectLineBreak-off

// Раскомментировать, если выполняется OneScript
// #Использовать "../../tools"

#Область ПрограммныйИнтерфейс

#Область РаботаСБазами

// Получить список баз
// Получает список доступных баз
// 
// Параметры:
//  Токен  - Строка - Токен                                                              - token
//  Отступ - Строка - Идентификатор следующей страницы списка баз из перыдудщего запроса - offser
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение - сериализованный JSON ответа от Airtable 
Функция ПолучитьСписокБаз(Знач Токен, Знач Отступ = "") Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Отступ);
    
    URL        = "https://api.airtable.com/v0/meta/bases";
    Заголовки  = ПолучитьЗаголовокАвторизации(Токен);
    Параметры  = Новый Структура;
    
    OPI_Инструменты.ДобавитьПоле("offset", Отступ, "Строка", Параметры);
    
    Ответ = OPI_Инструменты.Get(URL, Параметры, Заголовки);
    
    Возврат Ответ;
    
КонецФункции

// Получить таблицы базы
// Получает схему таблиц базы
// 
// Параметры:
//  Токен - Строка - Токен              - token
//  База  - Строка - Идентификатор базы - base
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение - сериализованный JSON ответа от Airtable
Функция ПолучитьТаблицыБазы(Знач Токен, Знач База) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(База);
    
    URL        = "https://api.airtable.com/v0/meta/bases/" + База + "/tables";
    Заголовки  = ПолучитьЗаголовокАвторизации(Токен);
    
    Ответ = OPI_Инструменты.Get(URL, , Заголовки);
    
    Возврат Ответ;
    
КонецФункции

// Создать базу
// Создает новую базу данных
// 
// Параметры:
//  Токен               - Строка                    - Токен                                                - token
//  РабочееПространство - Строка                    - Идентификатор рабочего пространства                  - ws
//  Наименование        - Строка                    - Наименование новой базы                              - title
//  КоллекцияТаблиц - Соответствие Из КлючИЗначение - Описание таблиц: Ключ > имя, Значение > массив полей - tablesdata
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение - сериализованный JSON ответа от Airtable
Функция СоздатьБазу(Знач Токен, Знач РабочееПространство, Знач Наименование, Знач КоллекцияТаблиц) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьКоллекцию(КоллекцияТаблиц);
    
    Если Не ТипЗнч(КоллекцияТаблиц) = Тип("Структура")
        И Не ТипЗнч(КоллекцияТаблиц) = Тип("Соответствие") Тогда
        
        ВызватьИсключение "Ошибка в данных коллекции таблиц";
        
    КонецЕсли;
    
    URL           = "https://api.airtable.com/v0/meta/bases";
    Заголовки     = ПолучитьЗаголовокАвторизации(Токен);
    МассивТаблиц  = Новый Массив;
    
    Для Каждого Таблица Из КоллекцияТаблиц Цикл
        
        Описание = СформироватьОписаниеТаблицы(Таблица.Ключ, Таблица.Значение);
        МассивТаблиц.Добавить(Описание);
        
    КонецЦикла;
 
    Параметры = Новый Структура;
    OPI_Инструменты.ДобавитьПоле("name"       , Наименование       , "Строка", Параметры);
    OPI_Инструменты.ДобавитьПоле("tables"     , МассивТаблиц       , "Массив", Параметры);
    OPI_Инструменты.ДобавитьПоле("workspaceId", РабочееПространство, "Строка", Параметры);
     
    Ответ = OPI_Инструменты.Post(URL, Параметры, Заголовки);
    
    Возврат Ответ;

КонецФункции

#КонецОбласти

#Область РаботаСТаблицами

// Создать таблицу
// Создает новую таблицу в базе
// 
// Параметры:
//  Токен        - Строка              - Токен                      - token
//  База         - Строка              - Идентификатор базы         - base
//  Наименование - Строка              - Наименование новой таблицы - title
//  МассивПолей  - Массив Из Структура - Массив описаний полей      - fieldsdata
//  Описание     - Строка              - Описание таблицы           - description
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение - сериализованный JSON ответа от Airtable
Функция СоздатьТаблицу(Знач Токен, Знач База, Знач Наименование, Знач МассивПолей, Знач Описание = "") Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(База);
    
    URL        = "https://api.airtable.com/v0/meta/bases/" + База + "/tables";
    Заголовки  = ПолучитьЗаголовокАвторизации(Токен);
    Параметры  = СформироватьОписаниеТаблицы(Наименование, МассивПолей, Описание); 
    
    Ответ = OPI_Инструменты.Post(URL, Параметры, Заголовки);
    
    Возврат Ответ;

КонецФункции

// Изменить таблицу
// Изменяет наименование и|или описание базы
// 
// Параметры:
//  Токен        - Строка  - Токен                  - token
//  База         - Строка  - Идентификатор базы     - base
//  Таблица      - Строка  - Идентификатор таблицы  - table
//  Наименование - Строка  - Новое наименование     - title
//  Описание     - Строка  - Новое описание         - description
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение - сериализованный JSON ответа от Airtable
Функция ИзменитьТаблицу(Знач Токен, Знач База, Знач Таблица, Знач Наименование = "", Знач Описание = "") Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(База);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Таблица);
    
    URL        = "https://api.airtable.com/v0/meta/bases/" + База + "/tables/" + Таблица;
    Заголовки  = ПолучитьЗаголовокАвторизации(Токен);
    Параметры  = Новый Структура; 
    
    OPI_Инструменты.ДобавитьПоле("name"       , Наименование, "Строка", Параметры);
    OPI_Инструменты.ДобавитьПоле("description", Описание    , "Строка", Параметры);
    
    Ответ = OPI_Инструменты.Patch(URL, Параметры, Заголовки);
    
    Возврат Ответ;

КонецФункции

#КонецОбласти

#Область РаботаСПолями

// Создать поле
// Создет новое поле в таблице
// 
// Параметры:
//  Токен         - Строка                     - Токен                  - token
//  База          - Строка                     - Идентификатор базы     - base
//  Таблица       - Строка                     - Идентификатор таблицы  - table
//  СтруктураПоля - Структура Из КлючИЗначение - Описание нового поля   - fielddata
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение - сериализованный JSON ответа от Airtable
Функция СоздатьПоле(Знач Токен, Знач База, Знач Таблица, Знач СтруктураПоля) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(База);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Таблица);
    OPI_ПреобразованиеТипов.ПолучитьКоллекцию(СтруктураПоля);
    
    Если Не ТипЗнч(СтруктураПоля) = Тип("Структура")
        И Не ТипЗнч(СтруктураПоля) = Тип("Соответствие") Тогда
        
        ВызватьИсключение "Ошибка в данных описания поля";
        
    КонецЕсли;
    
    URL        = "https://api.airtable.com/v0/meta/bases/" + База + "/tables/" + Таблица + "/fields";
    Заголовки  = ПолучитьЗаголовокАвторизации(Токен); 
        
    Ответ = OPI_Инструменты.Post(URL, СтруктураПоля, Заголовки);
    
    Возврат Ответ;

КонецФункции

// Изменить поле
// Изменяет имя и|или описание существующего поля таблицы
// 
// Параметры:
//  Токен        - Строка - Токен                   - token
//  База         - Строка - Идентификатор базы База - base
//  Таблица      - Строка - Идентификатор таблицы   - table
//  Поле         - Строка - Идентификатор поля      - field
//  Наименование - Строка - Новое наименование      - title
//  Описание     - Строка - Новое описание          - description
// 
// Возвращаемое значение:
//  Соответствие Из КлючИЗначение - сериализованный JSON ответа от Airtable
Функция ИзменитьПоле(Знач Токен, Знач База, Знач Таблица, Знач Поле, Знач Наименование = "", Знач Описание = "") Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(База);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Таблица);
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Поле);
    
    URL = "https://api.airtable.com/v0/meta/bases/" 
        + База 
        + "/tables/" 
        + Таблица 
        + "/fields/" 
        + Поле;
        
    Заголовки = ПолучитьЗаголовокАвторизации(Токен);
    
    Параметры = Новый Структура();
    OPI_Инструменты.ДобавитьПоле("name"       , Наименование, "Строка", Параметры);
    OPI_Инструменты.ДобавитьПоле("description", Описание    , "Строка", Параметры);
        
    Ответ = OPI_Инструменты.Patch(URL, Параметры, Заголовки);
    
    Возврат Ответ;

КонецФункции

// Получить поле (строковое)
// Получает описание поля строкового типа
// 
// Параметры:
//  Наименование - Строка - Наименование нового поля - title
// 
// Возвращаемое значение:
//  Структура -  Описание поля
Функция ПолучитьПолеСтроковое(Знач Наименование) Экспорт
    Возврат ОписаниеПримитивногоПоля(Наименование, "richText");
КонецФункции

// Получить поле (числовое)
// Получает описание поля числового типа
// 
// Параметры:
//  Наименование - Строка       - Наименование нового поля   - title
//  Точность     - Число,Строка - Число знаков после запятой - precision
// 
// Возвращаемое значение:
//  Структура -  Описание поля
Функция ПолучитьПолеНомера(Знач Наименование, Знач Точность = 0) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьЧисло(Точность);
    
    СтруктураОпций = Новый Структура("precision", Точность);
    Возврат ОписаниеПримитивногоПоля(Наименование, "number", СтруктураОпций);
    
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьЗаголовокАвторизации(Знач Токен) Экспорт
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Токен);
    
    Заголовки = Новый Соответствие;
    Заголовки.Вставить("Authorization", "Bearer " + Токен);
    
    Возврат Заголовки;
    
КонецФункции

Функция СформироватьОписаниеТаблицы(Знач Наименование, Знач МассивПолей, Знач Описание = "")
    
    OPI_ПреобразованиеТипов.ПолучитьСтроку(Наименование);
    OPI_ПреобразованиеТипов.ПолучитьКоллекцию(МассивПолей);
    
    ОписаниеТаблицы = Новый Структура("name,fields", Наименование, МассивПолей);
    
    OPI_Инструменты.ДобавитьПоле("description", Описание, "Строка", ОписаниеТаблицы);
    
    Возврат ОписаниеТаблицы;
    
КонецФункции

Функция ОписаниеПримитивногоПоля(Знач Наименование, Знач Тип, Знач Опции = "")
    
    СтруктураПоля = Новый Структура();
    OPI_Инструменты.ДобавитьПоле("name"   , Наименование, "Строка"   , СтруктураПоля);
    OPI_Инструменты.ДобавитьПоле("type"   , Тип         , "Строка"   , СтруктураПоля);
    OPI_Инструменты.ДобавитьПоле("options", Опции       , "Коллекция", СтруктураПоля);
    
    Возврат СтруктураПоля;

КонецФункции

#КонецОбласти