[target.x86_64-unknown-linux-gnu.env]
passthrough = [
    "OPENSSL_DIR=/usr/local/ssl",               # Корневой каталог OpenSSL
    "OPENSSL_LIB_DIR=/usr/local/ssl/lib",       # Каталог с библиотеками
    "OPENSSL_INCLUDE_DIR=/usr/local/ssl/include", # Каталог с заголовочными файлами
]

[target.x86_64-unknown-linux-gnu]
pre-build = [
    "apt-get update",
    "apt-get install -y build-essential checkinstall zlib1g-dev wget", # Устанавливаем зависимости
    "cd /usr/local/src",                                              # Переходим в директорию для сборки
    "wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz",      # Скачиваем OpenSSL 1.1.x
    "tar -xzf openssl-1.1.1w.tar.gz",                                 # Распаковываем архив
    "cd openssl-1.1.1w",                                              # Переходим в распакованную директорию
    "./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib", # Конфигурируем OpenSSL
    "make",                                                           # Собираем OpenSSL
    "make test",                                                      # Тестируем сборку
    "make install",                                                   # Устанавливаем OpenSSL
    "echo '/usr/local/ssl/lib' > /etc/ld.so.conf.d/openssl-1.1.conf", # Добавляем путь к библиотекам
    "ldconfig",                                                       # Обновляем кэш библиотек
    "mv /usr/bin/c_rehash /usr/bin/c_rehash.backup || true",          # Бэкап старого c_rehash
    "mv /usr/bin/openssl /usr/bin/openssl.backup || true",            # Бэкап старого openssl
    "echo 'PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/ssl/bin\"' > /etc/environment", # Обновляем PATH
    ". /etc/environment",                                             # Применяем обновление PATH
]
image = "ubuntu:16.04"

[target.i686-unknown-linux-gnu.env]
passthrough = [
    "OPENSSL_DIR=/usr/local/ssl",               # Корневой каталог OpenSSL
    "OPENSSL_LIB_DIR=/usr/local/ssl/lib",       # Каталог с библиотеками
    "OPENSSL_INCLUDE_DIR=/usr/local/ssl/include", # Каталог с заголовочными файлами
]

[target.i686-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture i386",                                  # Добавляем поддержку 32-битных пакетов
    "apt-get update",
    "apt-get install -y build-essential checkinstall zlib1g-dev:i386 gcc-multilib g++-multilib wget curl git", # Устанавливаем зависимости
    # Устанавливаем Rust
    "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable --target i686-unknown-linux-gnu",
    ". $HOME/.cargo/env",                                            # Активируем окружение Rust
    # Устанавливаем OpenSSL
    "cd /usr/local/src",                                             # Переходим в директорию для сборки
    "wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz",     # Скачиваем OpenSSL 1.1.x
    "tar -xzf openssl-1.1.1w.tar.gz",                                # Распаковываем архив
    "cd openssl-1.1.1w",                                             # Переходим в распакованную директорию
    "./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib -m32 no-asm", # Конфигурируем OpenSSL
    "make clean",                                                    # Очищаем предыдущие сборки
    "make",                                                          # Собираем OpenSSL
    "make install",                                                  # Устанавливаем OpenSSL
    "echo '/usr/local/ssl/lib' > /etc/ld.so.conf.d/openssl-1.1.conf",# Добавляем путь к библиотекам
    "ldconfig",                                                      # Обновляем кэш библиотек
    "mv /usr/bin/c_rehash /usr/bin/c_rehash.backup || true",         # Бэкап старого c_rehash
    "mv /usr/bin/openssl /usr/bin/openssl.backup || true",           # Бэкап старого openssl
    "echo 'PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/ssl/bin\"' > /etc/environment", # Обновляем PATH
    ". /etc/environment",                                            # Применяем обновление PATH
]
image = "ubuntu:16.04"                                               # Используем 64-битный образ