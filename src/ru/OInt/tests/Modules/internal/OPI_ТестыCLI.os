// OneScript: ./OInt/tests/Modules/internal/OPI_ТестыCLI.os

// MIT License

// Copyright (c) 2023 Anton Tsitavets

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/Bayselonarrend/OpenIntegrations

// Набор тестов для YAxUnit

// BSLLS:Typo-off
// BSLLS:LatinAndCyrillicSymbolInWord-off
// BSLLS:IncorrectLineBreak-off
// BSLLS:UsingServiceTag-off
// BSLLS:UnusedParameters-off
// BSLLS:DuplicateStringLiteral-off

//@skip-check undefined-variable
//@skip-check wrong-string-literal-content
//@skip-check module-structure-top-region
//@skip-check module-structure-method-in-regions
//@skip-check undefined-function-or-procedure
//@skip-check wrong-string-literal-content
//@skip-check module-unused-local-variable

// Раскомментировать, если выполняется OneScript
#Использовать oint
#Использовать asserts

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт

    OPI_ПолучениеДанныхТестов.СформироватьТестыЯксCLI();

КонецПроцедуры

#Область ЗапускаемыеТесты

#Область Telegram

Процедура CLI_Телеграм_ПолучитьИнформациюБота() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token", ПараметрыТеста);

    CLI_Telegram_ПолучитьИнформациюБота(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ПолучитьОбновления() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token", ПараметрыТеста);

    CLI_Telegram_УдалитьWebhook(ПараметрыТеста);
    CLI_Telegram_ПолучитьОбновления(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_УстановитьWebhook() Экспорт

     ПараметрыТеста = Новый Структура;
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token", ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_URL"  , ПараметрыТеста);

    CLI_Telegram_УстановитьWebhook(ПараметрыТеста);
    CLI_Telegram_УдалитьWebhook(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьТекстовоеСообщение() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"            , ПараметрыТеста);

    CLI_Telegram_ОтправитьТекстовоеСообщение(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьКартинку() Экспорт

    ПараметрыТеста = Новый Структура;
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"            , ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture"           , ПараметрыТеста);

    CLI_Telegram_ОтправитьКартинку(ПараметрыТеста);
    CLI_Telegram_СкачатьФайл(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьВидео() Экспорт

    ПараметрыТеста = Новый Структура;
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"            , ПараметрыТеста);
     OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Video"             , ПараметрыТеста);

    CLI_Telegram_ОтправитьВидео(ПараметрыТеста);
    CLI_Telegram_СкачатьФайл(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьАудио() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"            , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Audio"             , ПараметрыТеста);

    CLI_Telegram_ОтправитьАудио(ПараметрыТеста);
    CLI_Telegram_СкачатьФайл(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьДокумент() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"            , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Document"          , ПараметрыТеста);

    CLI_Telegram_ОтправитьДокумент(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьГифку() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"            , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("GIF"               , ПараметрыТеста);

    CLI_Telegram_ОтправитьГифку(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьМедиагруппу() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"            , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture"           , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Video"             , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Document"          , ПараметрыТеста);

    CLI_Telegram_ОтправитьМеидагруппу(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьМестоположение() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Long"              , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Lat"               , ПараметрыТеста);

    CLI_Telegram_ОтправитьМестоположение(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьКонтакт() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Name"              , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Surname"           , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Phone"             , ПараметрыТеста);

    CLI_Telegram_ОтправитьКонтакт(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ОтправитьОпрос() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"   , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);

    CLI_Telegram_ОтправитьОпрос(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ПереслатьСообщение() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"           , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"          , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID"       , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelMessageID", ПараметрыТеста);

    CLI_Telegram_ПереслатьСообщение(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_БанРазбан() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"           , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChatID"          , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID"       , ПараметрыТеста);

    CLI_Telegram_Бан(ПараметрыТеста);
    CLI_Telegram_Разбан(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_СоздатьСсылкуПриглашение() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);

    CLI_Telegram_СоздатьСсылкуПриглашение(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ЗакрепитьОткрепитьСообщение() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"           , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID"       , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelMessageID", ПараметрыТеста);

    CLI_Telegram_ЗакрепитьСообщение(ПараметрыТеста);
    CLI_Telegram_ОткрепитьСообщение(ПараметрыТеста);
    CLI_Telegram_УдалитьСообщение(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ПолучитьЧислоУчастников() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"    , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ChannelID", ПараметрыТеста);

    CLI_Telegram_ПолучитьЧислоУчастников(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ПолучитьСписокАватаровФорума() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token", ПараметрыТеста);

    CLI_Telegram_ПолучитьСписокАватаровФорума(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_СоздатьУдалитьТемуФорума() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"  , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ForumID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture"         , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("String"          , ПараметрыТеста);

    CLI_Telegram_СоздатьТемуФорума(ПараметрыТеста);
    CLI_Telegram_ИзменитьТемуФорума(ПараметрыТеста);
    CLI_Telegram_ЗакрытьТемуФорума(ПараметрыТеста);
    CLI_Telegram_ОткрытьТемуФорума(ПараметрыТеста);
    CLI_Telegram_ОчиститьСписокЗакрепленныхСообщенийТемы(ПараметрыТеста);
    CLI_Telegram_УдалитьТемуФорума(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_СкрытьПоказатьГлавнуюТему() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"  , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ForumID", ПараметрыТеста);

    CLI_Telegram_СкрытьГлавнуюТемуФорума(ПараметрыТеста);
    CLI_Telegram_ПоказатьГлавнуюТемуФорума(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_Телеграм_ИзменитьИмяГлавнойТемы() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_Token"  , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Telegram_ForumID", ПараметрыТеста);

    CLI_Telegram_ИзменитьИмяГлавнойТемыФорума(ПараметрыТеста);

КонецПроцедуры

#КонецОбласти

#Область VK

Процедура CLI_ВК_СоздатьСсылкуТокена() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("VK_AppID", ПараметрыТеста);

    CLI_VK_СоздатьСсылкуПолученияТокена(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_СоздатьУдалитьПост() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture" , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture2", ПараметрыТеста);

    CLI_VK_СоздатьПост(ПараметрыТеста);
    CLI_VK_УдалитьПост(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_СоздатьСоставнойПост() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture" , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Video"   , ПараметрыТеста);

    CLI_VK_СоздатьСоставнойПост(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_СоздатьОпрос() Экспорт

    CLI_VK_СоздатьОпрос();

КонецПроцедуры

Процедура CLI_ВК_СохранитьУдалитьКартинку() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture" , ПараметрыТеста);

    CLI_VK_СоздатьАльбом(ПараметрыТеста);
    CLI_VK_СохранитьКартинкуВАльбом(ПараметрыТеста);
    CLI_VK_УдалитьКартинку(ПараметрыТеста);
    CLI_VK_УдалитьАльбом(ПараметрыТеста);
    CLI_VK_ЗагрузитьФотоНаСервер(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_СоздатьИсторию() Экспорт

    ПараметрыТеста = Новый Соответствие;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture" , ПараметрыТеста);

    CLI_VK_СоздатьИсторию(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_МетодыОбсуждений() Экспорт

    ПараметрыТеста = Новый Структура;
    Параметры      = ПолучитьПараметрыВК();

    CLI_VK_СоздатьОбсуждение(ПараметрыТеста);
    CLI_VK_ЗакрытьОбсуждение(ПараметрыТеста);
    CLI_VK_ОткрытьОбсуждение(ПараметрыТеста);
    CLI_VK_НаписатьВОбсуждение(ПараметрыТеста);

    OPI_VK.ЗакрытьОбсуждение(ПараметрыТеста["VK_ConvID"], Истина, Параметры);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_ЛайкРепостКоммент() Экспорт

    ПараметрыТеста  = Новый Структура();
    Параметры       = ПолучитьПараметрыВК();
    Текст           = "Пост из автотеста";

    Результат = OPI_VK.СоздатьПост(Текст, Новый Массив, , , Параметры);
    ИДПоста   = Результат["response"]["post_id"];

    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_PostID", ИДПоста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("VK_PostID", ПараметрыТеста);

    CLI_VK_ПоставитьЛайк(ПараметрыТеста);
    CLI_VK_СделатьРепост(ПараметрыТеста);
    CLI_VK_НаписатьКомментарий(ПараметрыТеста);
    CLI_VK_СократитьСсылку(ПараметрыТеста);

    OPI_VK.УдалитьПост(ИДПоста                 , Параметры);
    OPI_VK.УдалитьПост(ПараметрыТеста["Repost"], Параметры);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_ПолучитьСтатистику() Экспорт

    ПараметрыТеста = Новый Структура();

    CLI_VK_ПолучитьСтатистику(ПараметрыТеста);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_ПолучитьСтатистикуПостов() Экспорт

    ПараметрыТеста = Новый Структура();

    CLI_VK_ПолучитьСтатистикуПостов(ПараметрыТеста);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_СоздатьРекламнуюКампанию() Экспорт

    Параметры       = ПолучитьПараметрыВК();
    Текст           = "Пост из автотеста";

    Результат = OPI_VK.СоздатьПост(Текст, Новый Массив, , , Параметры);
    ИДПоста   = Результат["response"]["post_id"];

    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_PostID", ИДПоста);

    ПараметрыТеста  = Новый Структура();
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("VK_AdsCabinetID", ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("VK_PostID"      , ПараметрыТеста);

    CLI_VK_СоздатьРекламнуюКампанию(ПараметрыТеста);
    CLI_VK_СоздатьРекламноеОбъявление(ПараметрыТеста);
    CLI_VK_ПриостановитьРекламноеОбъявление(ПараметрыТеста);
    CLI_VK_ПолучитьСписокРекламныхКатегорий(ПараметрыТеста);

    OPI_VK.УдалитьПост(ИДПоста, Параметры);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_ОтправитьСообщение() Экспорт

    ПараметрыТеста = Новый Структура;

    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("VK_UserID"        , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("VK_CommunityToken", ПараметрыТеста);

    CLI_VK_СформироватьКлавиатуру(ПараметрыТеста);
    CLI_VK_НаписатьСообщение(ПараметрыТеста);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_ПолучитьКатегорииТоваров() Экспорт

    ПараметрыТеста = Новый Структура;

    CLI_VK_ПолучитьСписокКатегорийТоваров(ПараметрыТеста);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_СоздатьТоварПодборку() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture" , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture2", ПараметрыТеста);

    CLI_VK_СоздатьПодборкуТоваров(ПараметрыТеста);
    CLI_VK_ИзменитьПодборкуТоваров(ПараметрыТеста);
    CLI_VK_ПолучитьПодборкиПоИД(ПараметрыТеста);
    CLI_VK_ДобавитьТовар(ПараметрыТеста);
    CLI_VK_ИзменитьТовар(ПараметрыТеста);
    CLI_VK_ДобавитьТоварВПодборку(ПараметрыТеста);
    CLI_VK_УдалитьТоварИзПодборки(ПараметрыТеста);
    CLI_VK_УдалитьТовар(ПараметрыТеста);
    CLI_VK_УдалитьПодборку(ПараметрыТеста);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_ВК_СоздатьТоварСоСвойствами() Экспорт

    Параметры      = ПолучитьПараметрыВК();

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture" , ПараметрыТеста);
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Picture2", ПараметрыТеста);

    CLI_VK_ПолучитьОписаниеТовара(ПараметрыТеста);
    CLI_VK_СоздатьСвойствоТовара(ПараметрыТеста);
    CLI_VK_ИзменитьСвойствоТовара(ПараметрыТеста);
    CLI_VK_ДобавитьВариантСвойстваТовара(ПараметрыТеста);
    CLI_VK_ИзменитьВариантСвойстваТовара(ПараметрыТеста);
    CLI_VK_СоздатьТоварСоСвойством(ПараметрыТеста);
    CLI_VK_ПолучитьТоварыПоИД(ПараметрыТеста);
    CLI_VK_СгруппироватьТовары(ПараметрыТеста);

    OPI_VK.УдалитьТовар(ПараметрыТеста["VK_MarketItemID2"], Параметры);
    OPI_VK.УдалитьТовар(ПараметрыТеста["VK_MarketItemID3"], Параметры);

    CLI_VK_УдалитьВариантСвойстваТовара(ПараметрыТеста);
    CLI_VK_УдалитьСвойствоТовара(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_ПолучитьСписокТоваров() Экспорт

    ПараметрыТеста = Новый Структура;

    CLI_VK_ПолучитьСписокТоваров(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_ПолучитьСписокПодборок() Экспорт

    ПараметрыТеста = Новый Структура;

    CLI_VK_ПолучитьСписокПодборок(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_ПолучитьСписокСвойств() Экспорт

    ПараметрыТеста = Новый Структура;

    CLI_VK_ПолучитьСписокСвойств(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_ПолучитьСписокЗаказов() Экспорт

    ПараметрыТеста = Новый Структура;

    CLI_VK_ПолучитьСписокЗаказов(ПараметрыТеста);

КонецПроцедуры

Процедура CLI_ВК_ЗагрузитьВидео() Экспорт

    ПараметрыТеста = Новый Структура;
    OPI_ПолучениеДанныхТестов.ПараметрВКоллекцию("Video", ПараметрыТеста);

    CLI_VK_ЗагрузитьВидеоНаСервер(ПараметрыТеста);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыВК()

    Параметры   = Новый Структура;
    НомерГруппы = OPI_ПолучениеДанныхТестов.ПолучитьПараметр("VK_GroupID");

    Параметры.Вставить("access_token"  , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("VK_Token"));
    Параметры.Вставить("owner_id"      , "-" + НомерГруппы);
    Параметры.Вставить("app_id"        , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("VK_AppID"));
    Параметры.Вставить("group_id"      , НомерГруппы);

    Возврат Параметры;

КонецФункции

Функция ПолучитьПараметрыАвторизацииТвиттер()

    Параметры = Новый Соответствие;

    Параметры.Вставить("redirect_uri"          , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_Redirect"));
    Параметры.Вставить("client_id"             , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_ClinetID"));
    Параметры.Вставить("client_secret"         , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_ClientSecret"));
    Параметры.Вставить("access_token"          , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_Token"));
    Параметры.Вставить("refresh_token"         , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_Refresh"));
    Параметры.Вставить("oauth_token"           , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_OAuthToken"));
    Параметры.Вставить("oauth_token_secret"    , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_OAuthSecret"));

    Параметры.Вставить("oauth_consumer_key"
        , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_OAuthConsumerKey"));
    Параметры.Вставить("oauth_consumer_secret"
        , OPI_ПолучениеДанныхТестов.ПолучитьПараметр("Twitter_OAuthConsumerSecret"));

    Возврат Параметры;

КонецФункции

#Область АтомарныеТесты

#Область Telegram

Процедура CLI_Telegram_ПолучитьИнформациюБота(ПараметрыФункции)

    Опции       = Новый Структура("token", ПараметрыФункции["Telegram_Token"]);
    Результат   = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ПолучитьИнформациюБота", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ПолучитьИнформациюБота", "Telegram");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИнформацияБота(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ПолучитьОбновления(ПараметрыФункции)

    Опции       = Новый Структура("token", ПараметрыФункции["Telegram_Token"]);
    Результат   = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ПолучитьОбновления", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ПолучитьОбновления", "Telegram");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмМассив(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_УстановитьWebhook(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token", ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("url"  , ПараметрыФункции["Telegram_URL"]);

    Результат   = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "УстановитьWebhook", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "УстановитьWebhook", "Telegram");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмУстановкаВебхук(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_УдалитьWebhook(ПараметрыФункции)

    Опции       = Новый Структура("token", ПараметрыФункции["Telegram_Token"]);
    Результат   = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "УдалитьWebhook", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "УдалитьWebhook", "Telegram");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмУдалениеВебхук(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьТекстовоеСообщение(ПараметрыФункции)

    Текст = ПараметрыФункции["String"];

    Опции = Новый Структура;
    Опции.Вставить("token", ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat" , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("text" , Текст);

    Результат   = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьТекстовоеСообщение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьТекстовоеСообщение", "Telegram");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмСообщение(Результат, Текст); // SKIP

    Опции.Вставить("chat", ПараметрыФункции["Telegram_ChannelID"]);

    Результат   = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьТекстовоеСообщение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьТекстовоеСообщение (канал)");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмСообщение(Результат, Текст);

    IDСообщения = OPI_Инструменты.ЧислоВСтроку(Результат["result"]["message_id"]);
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("Telegram_ChannelMessageID", IDСообщения);

    // Дополнительный тест 1
    Опции.Вставить("text"     , "<b>Текст html %%F0%%9F%%93%%9E 10%%</b>");
    Опции.Вставить("parsemode", "HTML");
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьТекстовоеСообщение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьТекстовоеСообщение (HTML)");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмОк(Результат);

    // Дополнительный тест 2
    Опции.Вставить("text"     , "%%F0%%9F%%A4%%BC");
    Опции.Вставить("parsemode", "Markdown");
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьТекстовоеСообщение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьТекстовоеСообщение (emoji)");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмОк(Результат);

    // Дополнительный тест 3
    Опции.Вставить("text"     , "Текст %%F0%%9F%%A%5%9D и emoji \(10%%\)");
    Опции.Вставить("parsemode", "MarkdownV2");
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьТекстовоеСообщение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьТекстовоеСообщение (текст и emoji)");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмОк(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьКартинку(ПараметрыФункции)

    Текст    = ПараметрыФункции["String"];
    Картинка = ПараметрыФункции["Picture"];

    Опции = Новый Структура;
    Опции.Вставить("token"   , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"    , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("text"    , Текст);
    Опции.Вставить("picture" , Картинка);

    КартинкаПуть = ПолучитьИмяВременногоФайла("png");
    КопироватьФайл(Картинка, КартинкаПуть);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьКартинку", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьКартинку", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмКартинка(Результат, Текст); // SKIP

    Опции.Вставить("picture" , КартинкаПуть);
    Опции.Вставить("chat"    , ПараметрыФункции["Telegram_ChannelID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьКартинку", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьКартинку (Путь)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмКартинка(Результат, Текст); // SKIP

    УдалитьФайлы(КартинкаПуть);

    IDФайла = Результат["result"]["photo"][0]["file_id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("Telegram_FileID", IDФайла);

    ПараметрыФункции.Вставить("Telegram_FileID", IDФайла);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьВидео(ПараметрыФункции)

    Текст = ПараметрыФункции["String"];
    Видео = ПараметрыФункции["Video"];

    Опции = Новый Структура;
    Опции.Вставить("token" , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("text"  , Текст);
    Опции.Вставить("video" , Видео);

    ВидеоПуть = ПолучитьИмяВременногоФайла("mp4");
    КопироватьФайл(Видео, ВидеоПуть);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьВидео", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьВидео", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмВидео(Результат, Текст); // SKIP

    Опции.Вставить("video" , ВидеоПуть);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChannelID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьВидео", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьВидео (Путь)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмВидео(Результат, Текст); // SKIP

    УдалитьФайлы(ВидеоПуть);

    IDФайла = Результат["result"]["video"]["file_id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("Telegram_FileID", IDФайла);

    ПараметрыФункции.Вставить("Telegram_FileID", IDФайла);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьАудио(ПараметрыФункции)

    Текст = ПараметрыФункции["String"];
    Аудио = ПараметрыФункции["Audio"];

    Опции = Новый Структура;
    Опции.Вставить("token" , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("text"  , Текст);
    Опции.Вставить("audio" , Аудио);

    АудиоПуть = ПолучитьИмяВременногоФайла("mp3");
    КопироватьФайл(Аудио, АудиоПуть);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьАудио", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьАудио", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмАудио(Результат, Текст); // SKIP

    Опции.Вставить("audio" , АудиоПуть);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChannelID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьАудио", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьАудио (Путь)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмАудио(Результат, Текст); // SKIP

    УдалитьФайлы(АудиоПуть);

    IDФайла = Результат["result"]["audio"]["file_id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("Telegram_FileID", IDФайла);

    ПараметрыФункции.Вставить("Telegram_FileID", IDФайла);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьДокумент(ПараметрыФункции)

    Текст    = ПараметрыФункции["String"];
    Документ = ПараметрыФункции["Document"];

    Опции = Новый Структура;
    Опции.Вставить("token" , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("text"  , Текст);
    Опции.Вставить("doc"   , Документ);

    ДокументПуть = ПолучитьИмяВременногоФайла("docx");
    КопироватьФайл(Документ, ДокументПуть);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьДокумент", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьДокумент", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмДокумент(Результат, Текст); // SKIP

    Опции.Вставить("doc" , ДокументПуть);
    Опции.Вставить("chat", ПараметрыФункции["Telegram_ChannelID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьДокумент", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьДокумент (Путь)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмДокумент(Результат, Текст); // SKIP

    Опции.Вставить("filename", "custom.docx");

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьДокумент", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьДокумент (Имя)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмДокумент(Результат, Текст); // SKIP

    УдалитьФайлы(ДокументПуть);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьГифку(ПараметрыФункции)

    Текст = ПараметрыФункции["String"];
    Гифка = ПараметрыФункции["GIF"];

    Опции = Новый Структура;
    Опции.Вставить("token", ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat" , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("text" , Текст);
    Опции.Вставить("gif"  , Гифка);

    ГифкаПуть = ПолучитьИмяВременногоФайла("gif");
    КопироватьФайл(Гифка, ГифкаПуть);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьГифку", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьГифку", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмГифка(Результат, Текст); // SKIP

    Опции.Вставить("gif" , ГифкаПуть);
    Опции.Вставить("chat", ПараметрыФункции["Telegram_ChannelID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьГифку", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьГифку (Путь)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмГифка(Результат, Текст); // SKIP

    УдалитьФайлы(ГифкаПуть);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьМеидагруппу(ПараметрыФункции)

    Картинка = ПараметрыФункции["Picture"];
    Видео    = ПараметрыФункции["Video"];

    КартинкаПуть = ПолучитьИмяВременногоФайла("png");
    КопироватьФайл(Картинка, КартинкаПуть);

    Медиагруппа    = Новый Соответствие;
    Медиагруппа.Вставить(КартинкаПуть, "photo");
    Медиагруппа.Вставить(Видео       , "video");

    Опции = Новый Структура;
    Опции.Вставить("token" , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("text"  , ПараметрыФункции["String"]);
    Опции.Вставить("media" , Медиагруппа);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьМедиагруппу", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьМедиагруппу", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмМедиагруппа(Результат);

    ДокументURL  = ПараметрыФункции["Document"];
    ДокументПуть = ПолучитьИмяВременногоФайла("docx");

    КопироватьФайл(ДокументURL, ДокументПуть);

    МедиаГруппа = Новый Соответствие;
    Медиагруппа.Вставить(ДокументURL , "document");
    Медиагруппа.Вставить(ДокументПуть, "document");

    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("media" , Медиагруппа);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьМедиагруппу", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьМедиагруппу (доки)", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмМедиагруппа(Результат);

    УдалитьФайлы(КартинкаПуть);
    УдалитьФайлы(ДокументПуть);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьМестоположение(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token" , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("lat"   , ПараметрыФункции["Lat"]);
    Опции.Вставить("long"  , ПараметрыФункции["Long"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьМестоположение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьМестоположение", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмМестоположение(Результат); // SKIP

    Опции.Вставить("chat", ПараметрыФункции["Telegram_ChannelID"]);
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьМестоположение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьМестоположение (канал)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмМестоположение(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьКонтакт(ПараметрыФункции)

    Имя = ПараметрыФункции["Name"];

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"   , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("surname", ПараметрыФункции["Surname"]);
    Опции.Вставить("phone"  , ПараметрыФункции["Phone"]);
    Опции.Вставить("name"   , Имя);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьКонтакт", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьКонтакт", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмКонтакт(Результат, Имя); // SKIP

    Опции.Вставить("chat", ПараметрыФункции["Telegram_ChannelID"]);
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьКонтакт", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьКонтакт (канал)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмКонтакт(Результат, Имя);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОтправитьОпрос(ПараметрыФункции)

    Вопрос   = "Какой ваш любимый цвет?";

    МассивОтветов     = Новый Массив;
    МассивОтветов.Добавить("Красный");
    МассивОтветов.Добавить("Желтый");
    МассивОтветов.Добавить("Зеленый");
    МассивОтветов.Добавить("Синий");

    Опции = Новый Структура;
    Опции.Вставить("token"   , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"    , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("question", Вопрос);
    Опции.Вставить("options" , МассивОтветов);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьОпрос", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьОпрос", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмОпрос(Результат, Вопрос); // SKIP

    Опции.Вставить("chat", ПараметрыФункции["Telegram_ChannelID"]);
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОтправитьОпрос", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьОпрос (канал)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмОпрос(Результат, Вопрос); // SKIP

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_СкачатьФайл(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"   , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("fileid"  , ПараметрыФункции["Telegram_FileID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "СкачатьФайл", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "СкачатьФайл", "Telegram");
    OPI_ПолучениеДанныхТестов.ОжидаетЧто(Результат).ИмеетТип("ДвоичныеДанные");

КонецПроцедуры

Процедура CLI_Telegram_ПереслатьСообщение(ПараметрыФункции)

    IDСообщения = ПараметрыФункции["Telegram_ChannelMessageID"];

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("from"   , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("to"     , ПараметрыФункции["Telegram_ChatID"]);
    Опции.Вставить("message", IDСообщения);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ПереслатьСообщение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ПереслатьСообщение", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмПереслать(Результат, IDСообщения);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_Бан(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token", ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat" , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("user" , ПараметрыФункции["Telegram_ChatID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "Бан", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "Бан", "Telegram");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмБан(Результат);
    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_Разбан(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token", ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat" , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("user" , ПараметрыФункции["Telegram_ChatID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "Разбан", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "Разбан", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмБан(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_СоздатьСсылкуПриглашение(ПараметрыФункции)

    Сутки         = 86400;
    ТекущаяДата   = OPI_Инструменты.ПолучитьТекущуюДату();

    Заголовок     = "Ссылка " + Строка(ТекущаяДата);
    Истечение     = ТекущаяДата + Сутки;
    UnixИстечение = OPI_Инструменты.UNIXTime(Истечение);

    Опции = Новый Структура;
    Опции.Вставить("token" , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"  , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("expire", Истечение);
    Опции.Вставить("title" , Заголовок);
    Опции.Вставить("limit" , 200);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "СоздатьСсылкуПриглашение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "СоздатьСсылкуПриглашение", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмПриглашение(Результат, Заголовок, UnixИстечение);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ЗакрепитьСообщение(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"   , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("message", ПараметрыФункции["Telegram_ChannelMessageID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ЗакрепитьСообщение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ЗакрепитьСообщение", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ОткрепитьСообщение(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"   , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("message", ПараметрыФункции["Telegram_ChannelMessageID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОткрепитьСообщение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОткрепитьСообщение", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ПолучитьЧислоУчастников(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"   , ПараметрыФункции["Telegram_ChannelID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ПолучитьЧислоУчастников", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ПолучитьЧислоУчастников", "Telegram");

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмЧисло(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ПолучитьСписокАватаровФорума(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ПолучитьСписокИконокАватаров", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ПолучитьСписокИконокАватаров", "Telegram");

    OPI_ПолучениеДанныхТестов.ОжидаетЧто(Результат).ИмеетТип("Соответствие").Заполнено();

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_СоздатьТемуФорума(ПараметрыФункции)

    Имя    = "Тестовая тема " + Строка(Новый УникальныйИдентификатор);
    Иконка = "5357419403325481346";
    Чат    = ПараметрыФункции["Telegram_ForumID"];
    Токен  = ПараметрыФункции["Telegram_Token"];

    Опции = Новый Структура;
    Опции.Вставить("token"  , Токен);
    Опции.Вставить("forum"  , Чат);
    Опции.Вставить("icon"   , Иконка);
    Опции.Вставить("title"  , Имя);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "СоздатьТемуФорума", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "СоздатьТемуФорума", "Telegram");

    Тема = Результат["result"]["message_thread_id"];

    OPI_Инструменты.ДобавитьПоле("Telegram_TopicID", Тема, "Строка", ПараметрыФункции);
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("Telegram_TopicID", ПараметрыФункции["Telegram_TopicID"]);

    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмСозданиеТемы(Результат, Имя, Иконка);

    ЧатТема      = Чат + "*" + Тема;
    Текст        = ПараметрыФункции["String"];
    Результат    = OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, ЧатТема, Текст);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОтправитьТекстовоеСообщение (форум)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмСообщение(Результат, Текст);

КонецПроцедуры

Процедура CLI_Telegram_ИзменитьТемуФорума(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("forum"  , ПараметрыФункции["Telegram_ForumID"]);
    Опции.Вставить("icon"   , "5310132165583840589");
    Опции.Вставить("title"  , "Новый тестовый заголовок");
    Опции.Вставить("topic"  , ПараметрыФункции["Telegram_TopicID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ИзменитьТемуФорума", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ИзменитьТемуФорума", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ЗакрытьТемуФорума(ПараметрыФункции)

    Токен = ПараметрыФункции["Telegram_Token"];
    Чат   = ПараметрыФункции["Telegram_ForumID"];

    Опции = Новый Структура;
    Опции.Вставить("token"  , Токен);
    Опции.Вставить("forum"  , Чат);

    OPI_Telegram.ОткрытьТемуФорума(Токен, Чат); // SKIP

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ЗакрытьТемуФорума", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ЗакрытьТемуФорума (главная)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат); // SKIP

    Опции.Вставить("topic"  , ПараметрыФункции["Telegram_TopicID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ЗакрытьТемуФорума", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ЗакрытьТемуФорума", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(25);

КонецПроцедуры

Процедура CLI_Telegram_ОткрытьТемуФорума(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("forum"  , ПараметрыФункции["Telegram_ForumID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОткрытьТемуФорума", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОткрытьТемуФорума (главная)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    Опции.Вставить("topic"  , ПараметрыФункции["Telegram_TopicID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОткрытьТемуФорума", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОткрытьТемуФорума", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(25);

КонецПроцедуры

Процедура CLI_Telegram_УдалитьТемуФорума(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("forum"  , ПараметрыФункции["Telegram_ForumID"]);
    Опции.Вставить("topic"  , ПараметрыФункции["Telegram_TopicID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "УдалитьТемуФорума", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "УдалитьТемуФорума", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(25);

КонецПроцедуры

Процедура CLI_Telegram_ОчиститьСписокЗакрепленныхСообщенийТемы(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("forum"  , ПараметрыФункции["Telegram_ForumID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОчиститьСписокЗакрепленныхСообщенийТемы", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОчиститьСписокЗакрепленныхСообщенийТемы (главная)");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат); // SKIP

    Опции.Вставить("topic"  , ПараметрыФункции["Telegram_TopicID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ОчиститьСписокЗакрепленныхСообщенийТемы", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ОчиститьСписокЗакрепленныхСообщенийТемы", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_СкрытьГлавнуюТемуФорума(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("forum"  , ПараметрыФункции["Telegram_ForumID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "СкрытьГлавнуюТемуФорума", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "СкрытьГлавнуюТемуФорума", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ПоказатьГлавнуюТемуФорума(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("forum"  , ПараметрыФункции["Telegram_ForumID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ПоказатьГлавнуюТемуФорума", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ПоказатьГлавнуюТемуФорума", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_ИзменитьИмяГлавнойТемыФорума(ПараметрыФункции)


    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("forum"  , ПараметрыФункции["Telegram_ForumID"]);
    Опции.Вставить("title"  , "Новое имя главной темы " + Строка(Новый УникальныйИдентификатор));

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "ИзменитьИмяГлавнойТемыФорума", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "ИзменитьИмяГлавнойТемыФорума", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_Telegram_УдалитьСообщение(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("token"  , ПараметрыФункции["Telegram_Token"]);
    Опции.Вставить("chat"   , ПараметрыФункции["Telegram_ChannelID"]);
    Опции.Вставить("message", ПараметрыФункции["Telegram_ChannelMessageID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("telegram", "УдалитьСообщение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛогCLI(Результат, "УдалитьСообщение", "Telegram");
    OPI_ПолучениеДанныхТестов.Проверка_ТелеграмИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

#КонецОбласти

#Область VK

Процедура CLI_VK_СоздатьСсылкуПолученияТокена(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("app"  , ПараметрыФункции["VK_AppID"]);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьСсылкуПолученияТокена", Опции);

    Результат = ПолучитьСтрокуИзДвоичныхДанных(Результат);
    
    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьСсылкуПолученияТокена", "VK");
    OPI_ПолучениеДанныхТестов.ОжидаетЧто(Результат).ИмеетТип("Строка").Заполнено();

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СоздатьПост(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    Текст     = "Пост из автотеста";
    URL       = "https://github.com/Bayselonarrend/OpenIntegrations";

    Картинка  = ПараметрыФункции["Picture"];  // URL, Путь или Двоичные данные
    Картинка2 = ПараметрыФункции["Picture2"]; // URL, Путь или Двоичные данные

    ИВФ = ПолучитьИмяВременногоФайла("png");
    КопироватьФайл(Картинка2, ИВФ);

    МассивКартинок = Новый Массив;
    МассивКартинок.Добавить(Картинка);
    МассивКартинок.Добавить(ИВФ);
    
    Опции = Новый Структура;
    Опции.Вставить("text"    , Текст);
    Опции.Вставить("pictures", МассивКартинок);
    Опции.Вставить("ad"      , Истина);
    Опции.Вставить("url"     , URL);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьПост", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьПост", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКПост(Результат);                         
    ИДПоста   = Результат["response"]["post_id"];      
    Результат = OPI_VK.УдалитьПост(ИДПоста, Параметры);

    Опции = Новый Структура;
    Опции.Вставить("text"    , Текст);
    Опции.Вставить("pictures", Картинка);
    Опции.Вставить("ad"      , Ложь);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьПост", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьПост (одна картинка)");
    OPI_ПолучениеДанныхТестов.Проверка_ВКПост(Результат);

    ИДПоста   = Результат["response"]["post_id"];
    Результат = OPI_VK.УдалитьПост(ИДПоста, Параметры);

    OPI_Инструменты.Пауза(5);
    
    Опции = Новый Структура;
    Опции.Вставить("text"    , Текст);
    Опции.Вставить("pictures", ИВФ);
    Опции.Вставить("ad"      , Истина);
    Опции.Вставить("url"     , URL);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьПост", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьПост (один путь)");
    OPI_ПолучениеДанныхТестов.Проверка_ВКПост(Результат);

    ИДПоста = Результат["response"]["post_id"];
    OPI_Инструменты.ДобавитьПоле("VK_PostID", ИДПоста, "Строка", ПараметрыФункции);
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_PostID", ПараметрыФункции["VK_PostID"]);

    УдалитьФайлы(ИВФ);
    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьПост(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    ИДПоста   = ПараметрыФункции["VK_PostID"];

    Опции = Новый Структура;
    Опции.Вставить("post", ИДПоста);
    Опции.Вставить("auth", Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьПост", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьПост", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

КонецПроцедуры

Процедура CLI_VK_СоздатьСоставнойПост(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    Текст     = "Пост из автотеста";
    URL       = "https://github.com/Bayselonarrend/OpenIntegrations";

    Картинка = ПараметрыФункции["Picture"]; // URL, Путь или Двоичные данные
    Видео    = ПараметрыФункции["Video"];   // URL, Путь или Двоичные данные

    ИВФ = ПолучитьИмяВременногоФайла("png");
    КопироватьФайл(Картинка, ИВФ);

    ЗагрузкаКартинки = OPI_VK.ЗагрузитьФотоНаСервер(ИВФ, Параметры)["response"][0];
    ЗагрузкаВидео    = OPI_VK.ЗагрузитьВидеоНаСервер(Видео, "Новое видео", , , Параметры);

    ВладелецКартинки = OPI_Инструменты.ЧислоВСтроку(ЗагрузкаКартинки["owner_id"]);
    ВладелецВидео    = OPI_Инструменты.ЧислоВСтроку(ЗагрузкаВидео["owner_id"]);

    IDКартинки       = OPI_Инструменты.ЧислоВСтроку(ЗагрузкаКартинки["id"]);
    IDВидео          = OPI_Инструменты.ЧислоВСтроку(ЗагрузкаВидео["video_id"]);

    МассивВложений = Новый Массив;
    МассивВложений.Добавить("photo" + ВладелецКартинки + "_" + IDКартинки);
    МассивВложений.Добавить("video" + ВладелецВидео + "_" + IDВидео);

    Опции = Новый Структура;
    Опции.Вставить("text"   , Текст);
    Опции.Вставить("objects", МассивВложений);
    Опции.Вставить("ad"     , Ложь);
    Опции.Вставить("url"    , URL);
    Опции.Вставить("auth"   , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьСоставнойПост", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьСоставнойПост", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКПост(Результат);
    УдалитьФайлы(ИВФ);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СоздатьОпрос()

    Параметры = ПолучитьПараметрыВК();
    Вопрос    = "Какой ваш любимый цвет?";

    МассивВариантов = Новый Массив;
    МассивВариантов.Добавить("Красный");
    МассивВариантов.Добавить("Желтый");
    МассивВариантов.Добавить("Зеленый");

    Опции = Новый Структура;
    Опции.Вставить("question", Вопрос);
    Опции.Вставить("options" , МассивВариантов);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьОпрос", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьОпрос", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКПост(Результат);

    ИДПоста  = Результат["response"]["post_id"];
    OPI_VK.УдалитьПост(ИДПоста, Параметры);

    OPI_Инструменты.Пауза(10);

КонецПроцедуры

Процедура CLI_VK_СоздатьАльбом(ПараметрыФункции)

    Параметры        = ПолучитьПараметрыВК();
    Имя              = "Альбом из автотеста";
    Описание         = "Новый альбом из автотеста";
    
    Опции = Новый Структура;
    Опции.Вставить("title"       , Имя);
    Опции.Вставить("description" , Описание);
    Опции.Вставить("auth"        , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьАльбом", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьАльбом", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКАльбом(Результат, Описание);

    ИДАльбома  = Результат["response"]["id"];
    ПараметрыФункции.Вставить("VK_AlbumID", ИДАльбома);
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_AlbumID", ИДАльбома);

КонецПроцедуры

Процедура CLI_VK_СохранитьКартинкуВАльбом(ПараметрыФункции)

    Параметры        = ПолучитьПараметрыВК();
    ОписаниеКартинки = "Картинка автотест";
    ИДАльбома        = ПараметрыФункции["VK_AlbumID"];

    Картинка  = ПараметрыФункции["Picture"];
    
    Опции = Новый Структура;
    Опции.Вставить("album"       , ИДАльбома);
    Опции.Вставить("picture"     , Картинка);
    Опции.Вставить("description" , ОписаниеКартинки);
    Опции.Вставить("auth"        , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СохранитьКартинкуВАльбом", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СохранитьКартинкуВАльбом", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВККартинкаАльбома(Результат, ОписаниеКартинки, ИДАльбома); 

    ИДКартинки  = Результат["response"][0]["id"];
    ПараметрыФункции.Вставить("VK_PictureID", ИДКартинки);
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_PictureID", ИДКартинки);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьКартинку(ПараметрыФункции)

    Параметры  = ПолучитьПараметрыВК();
    ИДКартинки = ПараметрыФункции["VK_PictureID"];

    Опции = Новый Структура;
    Опции.Вставить("pictureid", ИДКартинки);
    Опции.Вставить("auth"     , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьКартинку", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьКартинку", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьАльбом(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    ИДАльбома = ПараметрыФункции["VK_AlbumID"];

    Опции = Новый Структура;
    Опции.Вставить("album", ИДАльбома);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьАльбом", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьАльбом", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ЗагрузитьФотоНаСервер(ПараметрыФункции)

    Параметры    = ПолучитьПараметрыВК();

    Картинка = ПараметрыФункции["Picture"]; // URL, Двоичные данные или Путь к файлу
    Вид      = "Пост";

    Опции = Новый Структура;
    Опции.Вставить("file", Картинка);
    Опции.Вставить("type", Вид);
    Опции.Вставить("auth", Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ЗагрузитьФотоНаСервер", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ЗагрузитьВидеоНаСервер", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВККартинкаАльбома(Результат, "");

КонецПроцедуры

Процедура CLI_VK_СоздатьИсторию(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    URL       = "https://github.com/Bayselonarrend/OpenIntegrations";

    Картинка  = ПараметрыФункции["Picture"];       // URL, Путь к файлу или Двоичные данные
    ИВФ       = ПолучитьИмяВременногоФайла("png");
    КопироватьФайл(Картинка, ИВФ);
    Картинка  = Новый ДвоичныеДанные(ИВФ);

    Опции = Новый Структура;
    Опции.Вставить("picture", Картинка);
    Опции.Вставить("url"    , URL);
    Опции.Вставить("auth"   , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьИсторию", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьИсторию", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстория(Результат); 

    Опции = Новый Структура;
    Опции.Вставить("picture", ИВФ);
    Опции.Вставить("auth"   , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьИсторию", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьИсторию (путь)");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстория(Результат);

    УдалитьФайлы(ИВФ);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СоздатьОбсуждение(ПараметрыФункции)

    Параметры       = ПолучитьПараметрыВК();
    Название        = "Обсуждаем: какой цвет лучше?";
    Сообщение       = "Красный, желтый, синий или какой-то другой?";

    Опции = Новый Структура;
    Опции.Вставить("title", Название);
    Опции.Вставить("text" , Сообщение);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьОбсуждение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьОбсуждение", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКОбсуждение(Результат);

    ИДОбсуждения = Результат["response"];
    ПараметрыФункции.Вставить("VK_ConvID", ИДОбсуждения);
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_ConvID", ИДОбсуждения);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ЗакрытьОбсуждение(ПараметрыФункции)

    Параметры    = ПолучитьПараметрыВК();
    ИДОбсуждения = ПараметрыФункции["VK_ConvID"];
    
    Опции = Новый Структура;
    Опции.Вставить("topic" , ИДОбсуждения);
    Опции.Вставить("remove", Ложь);
    Опции.Вставить("auth"  , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ЗакрытьОбсуждение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ЗакрытьОбсуждение", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ОткрытьОбсуждение(ПараметрыФункции)

    Параметры    = ПолучитьПараметрыВК();
    ИДОбсуждения = ПараметрыФункции["VK_ConvID"];
    
    Опции = Новый Структура;
    Опции.Вставить("topic" , ИДОбсуждения);
    Опции.Вставить("auth"  , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ОткрытьОбсуждение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ОткрытьОбсуждение", "VK");

    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_НаписатьВОбсуждение(ПараметрыФункции)

    Параметры    = ПолучитьПараметрыВК();
    ИДОбсуждения = ПараметрыФункции["VK_ConvID"];
    Сообщение    = "Мне больше нравится желтый";

    Опции = Новый Структура;
    Опции.Вставить("topic" , ИДОбсуждения);
    Опции.Вставить("text"  , Сообщение);
    Опции.Вставить("auth"  , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "НаписатьВОбсуждение", Опции);

    // END

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "НаписатьВОбсуждение", "VK");

    OPI_ПолучениеДанныхТестов.Проверка_ВКОбсуждение(Результат);

КонецПроцедуры

Процедура CLI_VK_ПоставитьЛайк(ПараметрыФункции)

    Параметры   = ПолучитьПараметрыВК();
    IDПоста     = ПараметрыФункции["VK_PostID"];
    
    Опции = Новый Структура;
    Опции.Вставить("post"  , IDПоста);
    Опции.Вставить("auth"  , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПоставитьЛайк", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПоставитьЛайк", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКЛайк(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СделатьРепост(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    IDПоста   = 2571;
    IDСтены   = -218704372;

    Опции = Новый Структура;
    Опции.Вставить("post"  , IDПоста);
    Опции.Вставить("from"  , IDСтены);
    Опции.Вставить("auth"  , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СделатьРепост", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СделатьРепост", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКРепост(Результат);

    ПараметрыФункции.Вставить("Repost", Результат["response"]["post_id"]);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_НаписатьКомментарий(ПараметрыФункции)

    Параметры  = ПолучитьПараметрыВК();
    Текст      = "Новый комментарий";
    IDПоста    = ПараметрыФункции["VK_PostID"];
    IDСтены    = Параметры["owner_id"];

    Опции = Новый Структура;
    Опции.Вставить("post"  , IDПоста);
    Опции.Вставить("wall"  , IDСтены);
    Опции.Вставить("text"  , Текст);
    Опции.Вставить("auth"  , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "НаписатьКомментарий", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "НаписатьКомментарий", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВККомментарий(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СократитьСсылку(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    
    Опции = Новый Структура;
    Опции.Вставить("url"  , "https://github.com/Bayselonarrend/OpenIntegrations");
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СократитьСсылку", Опции);

    Результат = ПолучитьСтрокуИзДвоичныхДанных(Результат);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СократитьСсылку", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Строка(Результат);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСтатистику(ПараметрыФункции)

    Параметры       = ПолучитьПараметрыВК();

    ТекущаяДата     = OPI_Инструменты.ПолучитьТекущуюДату();
    ДатаНачала      = НачалоДня(ТекущаяДата);
    ДатаОкончания   = КонецДня(ДатаНачала);
    
    Опции = Новый Структура;
    Опции.Вставить("datefrom", ДатаНачала);
    Опции.Вставить("dateto"  , ДатаОкончания);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСтатистику", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСтатистику", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКСтатистика(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСтатистикуПостов(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    МассивПостов = Новый Массив;
    МассивПостов.Добавить(214);
    МассивПостов.Добавить(215);

    Опции = Новый Структура;
    Опции.Вставить("posts", МассивПостов);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСтатистикуПостов", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСтатистикуПостов", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКСтатистикаПостов(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СоздатьРекламнуюКампанию(ПараметрыФункции)

    Параметры    = ПолучитьПараметрыВК();

    IDКабинета   = ПараметрыФункции["VK_AdsCabinetID"];
    Наименование = "Новая кампания";

    Опции = Новый Структура;
    Опции.Вставить("cabinet", IDКабинета);
    Опции.Вставить("title"  , Наименование);
    Опции.Вставить("auth"   , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьРекламнуюКампанию", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьРекламнуюКампанию", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Соответствие(Результат);

    ИДКампании  = Результат["response"][0]["id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_AdsCampaignID", ИДКампании);
    ПараметрыФункции.Вставить("VK_AdsCampaignID", ИДКампании);

КонецПроцедуры

Процедура CLI_VK_СоздатьРекламноеОбъявление(ПараметрыФункции)

    Параметры    = ПолучитьПараметрыВК();

    НомерКампании   = ПараметрыФункции["VK_AdsCampaignID"];
    ДневнойЛимит    = 150;
    НомерКатегории  = 126;
    IDПоста         = ПараметрыФункции["VK_PostID"];
    IDКабинета      = ПараметрыФункции["VK_AdsCabinetID"];


    Опции = Новый Структура;
    Опции.Вставить("campaign", НомерКампании);
    Опции.Вставить("limit"   , ДневнойЛимит);
    Опции.Вставить("category", НомерКатегории);
    Опции.Вставить("post"    , IDПоста);
    Опции.Вставить("cabinet" , IDКабинета);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьРекламноеОбъявление", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьРекламноеОбъявление", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Соответствие(Результат);

    ИДОбъявления = Результат["response"][0]["id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_AdsPostID", ИДОбъявления);
    ПараметрыФункции.Вставить("VK_AdsPostID", ИДОбъявления);

КонецПроцедуры

Процедура CLI_VK_ПриостановитьРекламноеОбъявление(ПараметрыФункции)

    Параметры     = ПолучитьПараметрыВК();

    IDКабинета    = ПараметрыФункции["VK_AdsCabinetID"];
    IDОбъявления  = ПараметрыФункции["VK_AdsPostID"];
    
    Опции = Новый Структура;
    Опции.Вставить("adv"     , IDОбъявления);
    Опции.Вставить("cabinet" , IDКабинета);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПриостановитьРекламноеОбъявление", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПриостановитьРекламноеОбъявление", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Соответствие(Результат);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСписокРекламныхКатегорий(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Опции = Новый Структура;
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСписокРекламныхКатегорий", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСписокРекламныхКатегорий", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВККатегории(Результат);

КонецПроцедуры

Процедура CLI_VK_СформироватьКлавиатуру(ПараметрыФункции)

    МассивКнопок = Новый Массив;
    МассивКнопок.Добавить("Button 1");
    МассивКнопок.Добавить("Button 2");

    Опции = Новый Структура;
    Опции.Вставить("buttons", МассивКнопок);

    Клавиатура = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СформироватьКлавиатуру", Опции);
    Клавиатура = OPI_Инструменты.JSONСтрокой(Клавиатура);
    
    OPI_ПолучениеДанныхТестов.Проверка_Строка(Клавиатура);

КонецПроцедуры

Процедура CLI_VK_НаписатьСообщение(ПараметрыФункции)

    Параметры      = ПолучитьПараметрыВК();

    Текст          = "Сообщение из автотеста";
    IDПользователя = ПараметрыФункции["VK_UserID"];
    Communitytoken = ПараметрыФункции["VK_CommunityToken"];

    МассивКнопок = Новый Массив;
    МассивКнопок.Добавить("Button 1");
    МассивКнопок.Добавить("Button 2");

    Опции = Новый Структура;
    Опции.Вставить("buttons", МассивКнопок);

    Клавиатура = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СформироватьКлавиатуру", Опции);
    
    Опции = Новый Структура;
    Опции.Вставить("text"    , Текст);
    Опции.Вставить("user"    , IDПользователя);
    Опции.Вставить("ct"      , Communitytoken);
    Опции.Вставить("keyboard", Клавиатура);
    Опции.Вставить("auth"    , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "НаписатьСообщение", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "НаписатьСообщение", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКЧисло(Результат);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСписокКатегорийТоваров(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Опции = Новый Структура;
    Опции.Вставить("auth", Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСписокКатегорийТоваров", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСписокКатегорийТоваров", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Соответствие(Результат);

КонецПроцедуры

Процедура CLI_VK_СоздатьПодборкуТоваров(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Название = "Тестовая подборка";
    Картинка = ПараметрыФункции["Picture"];
    Основная = Истина;
    Скрытая  = Ложь;

    Опции = Новый Структура;
    Опции.Вставить("title"  , Название);
    Опции.Вставить("picture", Картинка);
    Опции.Вставить("main"   , Основная);
    Опции.Вставить("hidden" , Скрытая);
    Опции.Вставить("auth"   , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьПодборкуТоваров", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьПодборкуТоваров", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКПодборка(Результат);

    OPI_Инструменты.Пауза(5);

    ИДПодборки = Результат["response"]["market_album_id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_MarketAlbumID", ИДПодборки);
    ПараметрыФункции.Вставить("VK_MarketAlbumID", ИДПодборки);

КонецПроцедуры

Процедура CLI_VK_ИзменитьПодборкуТоваров(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Название  = "Измененная подборка";
    Подборка  = ПараметрыФункции["VK_MarketAlbumID"];
    
    Опции = Новый Структура;
    Опции.Вставить("title", Название);
    Опции.Вставить("sel"  , Подборка);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ИзменитьПодборкуТоваров", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ИзменитьПодборкуТоваров", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ПолучитьПодборкиПоИД(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    Подборка  = ПараметрыФункции["VK_MarketAlbumID"];

    Опции = Новый Структура;
    Опции.Вставить("sels" , Подборка);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьПодборкиПоИД", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьПодборкиПоИД", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКЭлементы(Результат);

КонецПроцедуры

Процедура CLI_VK_ДобавитьТовар(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Картинка1 = ПараметрыФункции["Picture"];  // URL, Двоичные или Путь к файлу
    Картинка2 = ПараметрыФункции["Picture2"]; // URL, Двоичные или Путь к файлу
    Подборка  = ПараметрыФункции["VK_MarketAlbumID"];

    МассивКартинок = Новый Массив;
    МассивКартинок.Добавить(Картинка1);
    МассивКартинок.Добавить(Картинка2);

    ОписаниеТовара = Новый Соответствие();
    ОписаниеТовара.Вставить("Имя"                , "Тестовый товар");
    ОписаниеТовара.Вставить("Описание"           , "Описание товара");
    ОписаниеТовара.Вставить("Категория"          , "20173");
    ОписаниеТовара.Вставить("Цена"               , 1);
    ОписаниеТовара.Вставить("СтараяЦена"         , 15);
    ОписаниеТовара.Вставить("ОсновноеФото"       , Картинка1);
    ОписаниеТовара.Вставить("URL"                , "https://github.com/Bayselonarrend/OpenIntegrations");
    ОписаниеТовара.Вставить("ДополнительныеФото" , МассивКартинок);
    ОписаниеТовара.Вставить("ГлавныйВГруппе"     , Истина);
    ОписаниеТовара.Вставить("Ширина"             , 20);
    ОписаниеТовара.Вставить("Высота"             , 30);
    ОписаниеТовара.Вставить("Глубина"            , 40);
    ОписаниеТовара.Вставить("Вес"                , 100);
    ОписаниеТовара.Вставить("SKU"                , "12345");
    ОписаниеТовара.Вставить("ДоступныйОстаток"   , "10");

    Опции = Новый Структура;
    Опции.Вставить("product", ОписаниеТовара);
    Опции.Вставить("sel"    , Подборка);
    Опции.Вставить("auth"   , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ДобавитьТовар", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ДобавитьТовар", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКТовар(Результат);

    ИДТовара  = Результат["response"]["market_item_id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_MarketItemID", ИДТовара);
    ПараметрыФункции.Вставить("VK_MarketItemID", ИДТовара);

КонецПроцедуры

Процедура CLI_VK_ИзменитьТовар(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Товар = ПараметрыФункции["VK_MarketItemID"];

    ОписаниеТовара = Новый Соответствие;
    ОписаниеТовара.Вставить("Имя", "Тестовый товар измененный");

    Опции = Новый Структура;
    Опции.Вставить("product", ОписаниеТовара);
    Опции.Вставить("item"   , Товар);
    Опции.Вставить("auth"   , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ИзменитьТовар", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ИзменитьТовар", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

КонецПроцедуры

Процедура CLI_VK_ДобавитьТоварВПодборку(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Товар     = ПараметрыФункции["VK_MarketItemID"];
    Подборка  = ПараметрыФункции["VK_MarketAlbumID"];

    Опции = Новый Структура;
    Опции.Вставить("sel"  , Подборка);
    Опции.Вставить("items", Товар);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ДобавитьТоварВПодборку", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ДобавитьТоварВПодборку", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКЧисло(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьТоварИзПодборки(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Товар     = ПараметрыФункции["VK_MarketItemID"];
    Подборка  = ПараметрыФункции["VK_MarketAlbumID"];

    Опции = Новый Структура;
    Опции.Вставить("sel" , Подборка);
    Опции.Вставить("item", Товар);
    Опции.Вставить("auth", Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьТоварИзПодборки", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьТоварИзПодборки", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьТовар(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Товар     = ПараметрыФункции["VK_MarketItemID"];

    Опции = Новый Структура;
    Опции.Вставить("item", Товар);
    Опции.Вставить("auth", Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьТовар", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьТовар", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьПодборку(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Подборка  = ПараметрыФункции["VK_MarketAlbumID"];

    Опции = Новый Структура;
    Опции.Вставить("sel" , Подборка);
    Опции.Вставить("auth", Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьПодборку", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьПодборку", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СоздатьСвойствоТовара(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Название  = "Цвет";
    
    Опции = Новый Структура;
    Опции.Вставить("title", Название);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СоздатьСвойствоТовара", Опции);
    
    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СоздатьСвойствоТовара", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКСвойство(Результат);

    OPI_Инструменты.Пауза(5);

    Свойство  = Результат["response"]["property_id"];
    Свойство  = OPI_Инструменты.ЧислоВСтроку(Свойство);

    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_PropID", Свойство);
    ПараметрыФункции.Вставить("VK_PropID", Свойство);

КонецПроцедуры

Процедура CLI_VK_ИзменитьСвойствоТовара(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Название  = "Цвет (изм.)";
    Свойство  = ПараметрыФункции["VK_PropID"];

    Опции = Новый Структура;
    Опции.Вставить("title", Название);
    Опции.Вставить("prop" , Свойство);
    Опции.Вставить("auth" , Параметры);

    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ИзменитьСвойствоТовара", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ИзменитьСвойствоТовара", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ДобавитьВариантСвойстваТовара(ПараметрыФункции)

    Счетчик   = 1; // SKIP
    Параметры = ПолучитьПараметрыВК();

    Свойство        = ПараметрыФункции["VK_PropID"];
    МассивВариантов = Новый Массив;
    МассивВариантов.Добавить("Желтый");
    МассивВариантов.Добавить("Синий");
    МассивВариантов.Добавить("Красный");

    Для Каждого Значение Из МассивВариантов Цикл

        Опции = Новый Структура;
        Опции.Вставить("value", Значение);
        Опции.Вставить("prop" , Свойство);
        Опции.Вставить("auth" , Параметры);
        
        Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ДобавитьВариантСвойстваТовара", Опции);

        OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ДобавитьВариантСвойстваТовара", "VK");
        OPI_ПолучениеДанныхТестов.Проверка_ВКВариантСвойства(Результат);    
        OPI_Инструменты.Пауза(5);                                             

        ИДВарианта   = Результат["response"]["variant_id"];                   
        ИмяПараметра = "VK_PropVarID" + Строка(Счетчик);                      

        OPI_ПолучениеДанныхТестов.ЗаписатьПараметр(ИмяПараметра, ИДВарианта); 
        ПараметрыФункции.Вставить(ИмяПараметра, ИДВарианта);
        Счетчик = Счетчик + 1;                                                

    КонецЦикла;

КонецПроцедуры

Процедура CLI_VK_ИзменитьВариантСвойстваТовара(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Свойство  = ПараметрыФункции["VK_PropID"];
    Вариант   = ПараметрыФункции["VK_PropVarID1"];
    Значение  = "Новое имя варианта";

    Опции = Новый Структура;
    Опции.Вставить("value" , Значение);
    Опции.Вставить("prop"  , Свойство);
    Опции.Вставить("option", Вариант);
    Опции.Вставить("auth"  , Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ИзменитьВариантСвойстваТовара", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ИзменитьВариантСвойстваТовара", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

КонецПроцедуры

Процедура CLI_VK_СоздатьТоварСоСвойством(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Картинка1        = ПараметрыФункции["Picture"];
    Картинка2        = ПараметрыФункции["Picture2"];
    ВариантСвойства1 = ПараметрыФункции["VK_PropVarID1"];
    ВариантСвойства2 = ПараметрыФункции["VK_PropVarID2"];

    МассивКартинок   = Новый Массив;
    МассивКартинок.Добавить(Картинка1);
    МассивКартинок.Добавить(Картинка2);

    Товар = Новый Соответствие();
    Товар.Вставить("Имя"                , "Тестовый товар (со свойством)");
    Товар.Вставить("Описание"           , "Описание товара");
    Товар.Вставить("Категория"          , "20173");
    Товар.Вставить("Цена"               , 1);
    Товар.Вставить("СтараяЦена"         , 15);
    Товар.Вставить("ОсновноеФото"       , Картинка1);
    Товар.Вставить("URL"                , "https://github.com/Bayselonarrend/OpenIntegrations");
    Товар.Вставить("ДополнительныеФото" , МассивКартинок);
    Товар.Вставить("ГлавныйВГруппе"     , Истина);
    Товар.Вставить("НомерГруппы"        , Неопределено);
    Товар.Вставить("Ширина"             , 20);
    Товар.Вставить("Высота"             , 30);
    Товар.Вставить("Глубина"            , 40);
    Товар.Вставить("Вес"                , 100);
    Товар.Вставить("SKU"                , 12345);
    Товар.Вставить("ДоступныйОстаток"   , "10");
    Товар.Вставить("ЗначенияСвойств"    , ВариантСвойства1);

    Опции = Новый Структура;
    Опции.Вставить("product", Товар);
    Опции.Вставить("auth"   , Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ДобавитьТовар", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ТоварСоСвойством1");
    OPI_ПолучениеДанныхТестов.Проверка_ВКТовар(Результат);

    ИДТовара  = Результат["response"]["market_item_id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_MarketItemID2", ИДТовара);
    ПараметрыФункции.Вставить("VK_MarketItemID2", ИДТовара);

    Товар.Вставить("Имя"            , "Тестовый товар (другой)");
    Товар.Вставить("ЗначенияСвойств", ВариантСвойства2);

    Опции = Новый Структура;
    Опции.Вставить("product", Товар);
    Опции.Вставить("auth"   , Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ДобавитьТовар", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ТоварСоСвойством2");
    OPI_ПолучениеДанныхТестов.Проверка_ВКТовар(Результат);

    ИДТовара  = Результат["response"]["market_item_id"];
    OPI_ПолучениеДанныхТестов.ЗаписатьПараметр("VK_MarketItemID3", ИДТовара);
    ПараметрыФункции.Вставить("VK_MarketItemID3", ИДТовара);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ПолучитьТоварыПоИД(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Товар1 = ПараметрыФункции["VK_MarketItemID2"];
    Товар2 = ПараметрыФункции["VK_MarketItemID3"];

    МассивТоваров = Новый Массив;
    МассивТоваров.Добавить(Товар1);
    МассивТоваров.Добавить(Товар2);

    Опции = Новый Структура;
    Опции.Вставить("items", МассивТоваров);
    Опции.Вставить("auth" , Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьТоварыПоИД", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьТоварыПоИД", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИнформацияОТоварах(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_СгруппироватьТовары(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Товар1 = ПараметрыФункции["VK_MarketItemID2"];
    Товар2 = ПараметрыФункции["VK_MarketItemID3"];

    МассивТоваров = Новый Массив;
    МассивТоваров.Добавить(Товар1);
    МассивТоваров.Добавить(Товар2);

    Опции = Новый Структура;
    Опции.Вставить("items", МассивТоваров);
    Опции.Вставить("auth" , Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "СгруппироватьТовары", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "СгруппироватьТовары", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКГруппаТоваров(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьВариантСвойстваТовара(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Вариант   = ПараметрыФункции["VK_PropVarID1"];

    Опции = Новый Структура;
    Опции.Вставить("option", Вариант);
    Опции.Вставить("auth"  , Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьВариантСвойстваТовара", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьВариантСвойстваТовара", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_УдалитьСвойствоТовара(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();

    Свойство  = ПараметрыФункции["VK_PropID"];

    Опции = Новый Структура;
    Опции.Вставить("prop", Свойство);
    Опции.Вставить("auth", Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "УдалитьСвойствоТовара", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "УдалитьСвойствоТовара");
    OPI_ПолучениеДанныхТестов.Проверка_ВКИстина(Результат);
    
    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ПолучитьОписаниеТовара(ПараметрыФункции)

    Опции = Новый Структура;
    Опции.Вставить("empty", Ложь);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьОписаниеТовара", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьОписаниеТовара", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Соответствие(Результат);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСписокТоваров(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    
    Опции = Новый Структура;
    Опции.Вставить("auth", Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСписокТоваров", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСписокТоваров", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Массив(Результат);
    
    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСписокПодборок(ПараметрыФункции)

    Параметры = ПолучитьПараметрыВК();
    
    Опции = Новый Структура;
    Опции.Вставить("auth", Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСписокПодборок", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСписокПодборок", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Массив(Результат);
    
    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСписокСвойств(ПараметрыФункции)

    Параметры  = ПолучитьПараметрыВК();
    
    Опции = Новый Структура;
    Опции.Вставить("auth", Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСписокСвойств", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСписокСвойств", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Массив(Результат);
    
    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ПолучитьСписокЗаказов(ПараметрыФункции)

    Параметры  = ПолучитьПараметрыВК();
    
    Опции = Новый Структура;
    Опции.Вставить("auth", Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ПолучитьСписокЗаказов", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ПолучитьСписокЗаказов", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_Массив(Результат);
    
    OPI_Инструменты.Пауза(5);

КонецПроцедуры

Процедура CLI_VK_ЗагрузитьВидеоНаСервер(ПараметрыФункции)

    Параметры    = ПолучитьПараметрыВК();

    Видео        = ПараметрыФункции["Video"]; // URL, Двоичные данные или Путь к файлу
    Наименование = "Новое видео";
    Описание     = "Описание видео";

    Опции = Новый Структура;
    Опции.Вставить("file"       , Видео);
    Опции.Вставить("title"      , Наименование);
    Опции.Вставить("description", Описание);
    Опции.Вставить("auth"       , Параметры);
        
    Результат = OPI_ПолучениеДанныхТестов.ВыполнитьТестCLI("vk", "ЗагрузитьВидеоНаСервер", Опции);

    OPI_ПолучениеДанныхТестов.ЗаписатьЛог(Результат, "ЗагрузитьВидеоНаСервер", "VK");
    OPI_ПолучениеДанныхТестов.Проверка_ВКВидео(Результат);

    OPI_Инструменты.Пауза(5);

КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецОбласти


