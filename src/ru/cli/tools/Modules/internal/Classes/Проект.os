Перем ПутьКБазе;

#Область СлужеюныйПрограммныйИнтерфейс

Процедура ПриСозданииОбъекта(Проект, СоздаватьНовый = Ложь)

	OPI_ПреобразованиеТипов.ПолучитьСтроку(Проект);

	ПутьКБазе = Проект;

	Если СоздаватьНовый Тогда 
		Инициализировать();
	Иначе
		ПроверитьСуществование();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьСуществование()

	ФайлПроекта = Новый Файл(ПутьКБазе);

	Если Не ФайлПроекта.Существует() Тогда
		ВызватьИсключение "Файл проекта по указанному пути не найден";
	КонецЕсли;

	Если ФайлПроекта.ЭтоКаталог() Тогда
		ВызватьИсключение "Передан путь к каталогу, а не файл проекта";
	КонецЕсли;

КонецПроцедуры

Процедура НормализоватьПроект()

	ФайлБазы = Новый Файл(ПутьКБазе);
	
	Если ФайлБазы.ЭтоКаталог() Тогда

		Счетчик = 1;

		Пока ФайлБазы.Существует() Цикл
		
			ПутьКБазе   = ПутьКБазе + "/new_project_" + Строка(Счетчик) + ".oint";
			ФайлБазы = Новый Файл(ПутьКБазе);

			Счетчик = Счетчик + 1;

		КонецЦикла;

	КонецЕсли;

	Если Не ФайлБазы.Существует() Тогда
		СоздатьНовыйПроект();
		Сообщить("Файл проекта успешно создан!");
	Иначе
		Сообщить("Файл проекта по заданному пути уже существует!");
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьНовыйПроект()
	
	СоздатьТаблицуОбработчиков();

КонецПроцедуры

Процедура СоздатьТаблицуОбработчиков()

	СтруктураТаблицы = Новый Структура();
	СтруктураТаблицы.Вставить("id"    , "INTEGER PRIMARY KEY");
	СтруктураТаблицы.Вставить("name"  , "TEXT");
	СтруктураТаблицы.Вставить("secret", "TEXT");

	Результат = OPI_SQLite.СоздатьТаблицу("handlers", СтруктураТаблицы, ПутьКБазе);

КонецПроцедуры

#КонецОбласти