    Host = FunctionParameters["SSH_Host"];
    Port = FunctionParameters["SSH_Port"];

    UseProxy          = True;
    ProxySettings     = Undefined;
    AuthorizationType = "By login and password";

    If AuthorizationType = "By login and password" Then

        Login    = FunctionParameters["SSH_User"];
        Password = FunctionParameters["SSH_Password"];

        SFTPSettings = OPI_SFTP.GetSettingsLoginPassword(Host, Port, Login, Password);

    ElsIf AuthorizationType = "By key" Then

        Login      = FunctionParameters["SSH_User"];
        PrivateKey = "./ssh_key";
        PublicKey  = "./ssh_key.pub";

        SFTPSettings = OPI_SFTP.GetSettingsPrivateKey(Host, Port, Login, PrivateKey, PublicKey);

    Else

        Login        = FunctionParameters["SSH_User"];
        SFTPSettings = OPI_SFTP.GetSettingsViaAgent(Host, Port, Login);

    EndIf;

    If UseProxy Then

        ProxyType = FunctionParameters["Proxy_Type"]; // http, socks5, socks4

        ProxyAddress  = FunctionParameters["Proxy_IP"];
        ProxyPort     = FunctionParameters["Proxy_Port"];
        ProxyLogin    = FunctionParameters["Proxy_User"];
        ProxyPassword = FunctionParameters["Proxy_Password"];

        ProxySettings = OPI_SFTP.GetProxySettings(ProxyAddress, ProxyPort, ProxyType, ProxyLogin, ProxyPassword);

    EndIf;

    Connection = OPI_SFTP.CreateConnection(SFTPSettings, ProxySettings);

    If OPI_SFTP.IsConnector(Connection) Then
        Result = OPI_SFTP.ListObjects(Connection, "test_folder", True);
    Else
        Result = Connection; // Error of connection
    EndIf;
