
name: 2. TEST | Полное тестирование (EN)

# Controls when the workflow will run
on:
  workflow_dispatch:

jobs:

  Decode:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:

      - uses: actions/checkout@v4 

      - name: Расшифровать тестовые данные
        run: gpg --quiet --batch --yes --decrypt --passphrase="$ENC_JSON" --output ./data.json ./data.json.gpg        
        env:
          ENC_JSON: ${{ secrets.ENC_JSON }}
      - name: Записать тестовые данные в кэш
        uses: actions/cache/save@v3
        with:
          key: test-data
          path: ./data.json

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4             


  Testing-Telegram:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Get bot information
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_GetBotInfo"

      - name: Get updates
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_GetUpdates"

      - name: Set Webhook
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SetWebhook"

      - name: Send text message
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendTextMessage"

      - name: Send image
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendImage"

      - name: Send video
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendVideo"

      - name: Send audio
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendAudio"

      - name: Send document
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendDocument"

      - name: Send GIF
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendGIF"

      - name: Send mediagroup
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendMediaGroup"

      - name: Send location
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendLocation"

      - name: Send contact
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendContact"

      - name: Send poll
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_SendPoll"

      - name: Forward message
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_ForwardMessage"

      - name: Ban/Unban
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_BanUnban"

      - name: Create invitation link
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_CreateInvitationLink"

      - name: Pin/Unpin message
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_PinUnpinMessage"

      - name: Get participant count
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_GetMemberCount"

      - name: Get forum avatars list
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_GetForumAvatarsList"

      - name: Create/Delete forum topic
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_CreateDeleteForumTopic"

      - name: Change main topic name
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_ChangeMainTopicName"

      - name: Hide/Show main topic
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TelegramAPI_HideShowMainTopic"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Telegram
          path: ./docs/en/results/Telegram


  Testing-VK:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Create token retrieval link
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreateTokenLink"

      - name: Create/Delete post
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreateDeletePost"

      - name: Create/Delete composite post
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreateCompositePost"

      - name: Create poll
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreatePoll"

      - name: Add/Delete image
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_SaveDeleteImage"

      - name: Create story
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreateStory"

      - name: Actions with discussions
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_DiscussionMethods"

      - name: Like/Repost/Comment
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_LikeRepostComment"

      - name: Get statistics
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_GetStatistics"

      - name: Get post statistics
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_GetPostStatistics"

      - name: Create advertising campaign
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreateAdCampaign"

      - name: Send message
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_SendMessage"

      - name: Get product categories
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_GetProductCategories"

      - name: Create product and selection
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreateProductSelection"

      - name: Create product with properties
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_CreateProductWithProperties"

      - name: Get product list
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_GetProductList"

      - name: Get selection list
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_GetSelectionList"

      - name: Get property list
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_GetPropertyList"

      - name: Get order list
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_GetOrderList"

      - name: Upload video
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKAPI_UploadVideo"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-VK
          path: ./docs/en/results/VK


  Testing-Viber:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Data retrieval
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Viber_DataRetrieval"

      - name: Messages sending
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Viber_MessagesSending"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Viber
          path: ./docs/en/results/Viber


  Testing-Twitter:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Account data
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TwitterAPI_AccountData"

      - name: Tweets creation
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TwitterAPI_Tweets"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Twitter
          path: ./docs/en/results/Twitter


      - name: Записать измененные данные
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: test-data_new
          path: ./data.json


  Testing-PostgreSQL:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Common methods
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Postgres_CommonMethods"

      - name: ORM
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Postgres_ORM"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-PostgreSQL
          path: ./docs/en/results/PostgreSQL


  Testing-MySQL:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Common methods
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_MYS_CommonMethods"

      - name: ORM
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_MYS_ORM"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-MySQL
          path: ./docs/en/results/MySQL


  Testing-SQLite:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Common methods
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_SQLL_CommonMethods"

      - name: ORM
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_SQLL_ORM"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-SQLite
          path: ./docs/en/results/SQLite


  Testing-RCON:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Commands execution
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_RC_CommandsExecution"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-RCON
          path: ./docs/en/results/RCON


  Testing-YandexDisk:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Get disk information
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_GetDiskInfo"

      - name: Create folder
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_CreateFolder"

      - name: Upload by URL and get
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_UploadByUrlAndGetObject"

      - name: Upload/Delete file
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_UploadDeleteFile"

      - name: Create object copy
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_CreateObjectCopy"

      - name: Get download link
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_GetDownloadLink"

      - name: Get list of files
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_GetFileList"

      - name: Move object
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_MoveObject"

      - name: Actions with public objects
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_PublicObjectActions"

      - name: Get published list
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YDisk_GetPublishedList"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-YandexDisk
          path: ./docs/en/results/YandexDisk


  Testing-GoogleWorkspace:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Authorization
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GW_Auth"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-GoogleWorkspace
          path: ./docs/en/results/GoogleWorkspace


      - name: Записать измененные данные
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: test-data_google
          path: ./data.json


  Testing-GoogleCalendar:
    runs-on: ubuntu-latest
    needs: Testing-GoogleWorkspace
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data_google
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Authorization
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GW_Auth"

      - name: Get list of calendars
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GC_GetCalendarList"

      - name: Create/Delete calendar
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GC_CreateDeleteCalendar"

      - name: Create/Delete event
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GC_CreateDeleteEvent"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-GoogleCalendar
          path: ./docs/en/results/GoogleCalendar


  Testing-GoogleDrive:
    runs-on: ubuntu-latest
    needs: Testing-GoogleWorkspace
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data_google
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Authorization
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GW_Auth"

      - name: Get list of directories
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GD_GetCatalogList"

      - name: Upload/Delete file
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GD_UploadDeleteFile"

      - name: Create/Delete Comment
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GD_CreateDeleteComment"

      - name: Create/Delete catalog
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GD_CreateCatalog"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-GoogleDrive
          path: ./docs/en/results/GoogleDrive


  Testing-GoogleSheets:
    runs-on: ubuntu-latest
    needs: Testing-GoogleWorkspace
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data_google
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Authorization
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GW_Auth"

      - name: Create table
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GT_CreateTable"

      - name: Fill/Clear cells
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GT_FillClearCells"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-GoogleSheets
          path: ./docs/en/results/GoogleSheets


  Testing-Notion:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Create page
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_NotionAPI_CreatePage"

      - name: Create/Edit database
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_NotionAPI_CreateUpdateBase"

      - name: Create/Delete block
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_NotionAPI_CreateDeleteBlock"

      - name: Get users
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_NotionAPI_GetUsers"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Notion
          path: ./docs/en/results/Notion


  Testing-Slack:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Get data
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_SlackGetData"

      - name: Send/Delete message
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Slack_SendDeleteMessage"

      - name: Create/Archive channel
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Slack_CreateArchiveChannel"

      - name: Open/Close dialog
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Slack_OpenCloseDialog"

      - name: Upload/Delete file
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Slack_UploadDeleteFile"

      - name: Upload/Delete external file
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_Slack_UploadDeleteExternalFile"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Slack
          path: ./docs/en/results/Slack


  Testing-Airtable:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Create/Edit database
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_AT_CreateDatabase"

      - name: Create/Edit table
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_AT_CreateTable"

      - name: Create/Edit field
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_AT_CreateField"

      - name: Create/Delete records
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_AT_CreateDeleteRecords"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Airtable
          path: ./docs/en/results/Airtable


  Testing-Dropbox:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Get/Update token
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_GetUpdateToken"

      - name: Upload file
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_UploadFile"

      - name: Upload file by URL
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_UploadFileByURL"

      - name: Create folder
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_CreateFolder"

      - name: Create/Delete tag
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_CreateDeleteTag"

      - name: Get account data
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_GetAccount"

      - name: Access management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_AccessManagement"

      - name: Get list of folder files
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_DropboxAPI_GetFolderFileList"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Dropbox
          path: ./docs/en/results/Dropbox


  Testing-Bitrix24:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Token management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_TokenManagement"

      - name: Server time
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_ServerTime"

      - name: Posts management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_PostsManagement"

      - name: Tasks management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_TaskManagement"

      - name: Comments management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_CommentsManagement"

      - name: Working with drive
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_WorkingWithDrive"

      - name: Kanban
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_Kanban"

      - name: Timekeeping
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_Timekeeping"

      - name: Chats works
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_ChatManagement"

      - name: Notifications management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_NotificationsManagement"

      - name: Working with custom task fields
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_TasksFieldsManagement"

      - name: Departments management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_DepartmentsManagement"

      - name: Users management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B2_UsersManagement"

      - name: Leads management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_LeadsManagement"

      - name: Deals management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_DealsManagement"

      - name: Calendars management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_B24_CalendarsManagement"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Bitrix24
          path: ./docs/en/results/Bitrix24


  Testing-VkTeams:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Messages sending
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKT_MessagesSending"

      - name: Common methods
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKT_CommonMethods"

      - name: Chat management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_VKT_ChatManagement"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-VkTeams
          path: ./docs/en/results/VkTeams


  Testing-Ozon:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Attributes and features
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OzonAPI_AttributesAndFeatures"

      - name: Uploading and updating products
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OzonAPI_UploadingAndUpdatingProducts"

      - name: Barcodes
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OzonAPI_Barcodes"

      - name: Prices and stocks
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OzonAPI_PricesAndStocks"

      - name: Promotions management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OzonAPI_PromotionsManagement"

      - name: Warehouses management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OzonAPI_WarehousesManagement"

      - name: FBO scheme
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OzonAPI_FBOScheme"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Ozon
          path: ./docs/en/results/Ozon


  Testing-Neocities:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Files management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_NC_FilesManagement"

      - name: Data retrieving
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_NC_DataRetrieving"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Neocities
          path: ./docs/en/results/Neocities


  Testing-CDEK:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Common methods
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_CdekAPI_CommonMethods"

      - name: Orders management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_CDEKAPI_OrdersManagement"

      - name: Courier invitations management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_CdekAPI_CourierInvitationsManagement"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-CDEK
          path: ./docs/en/results/CDEK


  Testing-YandexMetrika:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Tags management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YaMetrika_TagsManagement"

      - name: Counters management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YaMetrika_CountersManagement"

      - name: Actions management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_YaMetrika_ActionsManagement"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-YandexMetrika
          path: ./docs/en/results/YandexMetrika


  Testing-S3:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Common methods
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_AWS_CommonMethods"

      - name: Buckets management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_AWS_BucketsManagement"

      - name: Objects management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_AWS_ObjectsManagement"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-S3
          path: ./docs/en/results/S3


  Testing-TCP:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: TCP Client
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_TC_Client"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-TCP
          path: ./docs/en/results/TCP


  Testing-GreenAPI:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Group management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GAPI_GroupManagement"

      - name: Messages sending
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GAPI_MessageSending"

      - name: Notifications receiving
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GAPI_NotificationsReceiving"

      - name: Message queue
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GAPI_MessageQueue"

      - name: Message logs
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GAPI_MessageLogs"

      - name: Account
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_GAPI_Account"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-GreenAPI
          path: ./docs/en/results/GreenAPI


  Testing-Ollama:
    runs-on: ubuntu-latest
    needs: [Decode, Build]
    steps:

      - uses: actions/checkout@v2 
      - uses: otymko/setup-onescript@v1.4
        with:
          version: 1.9.1
      
      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data
          path: ./data.json
      
      - name: Установить asserts и 1testrunner
        run: |
          opm install asserts
          opm install 1testrunner

      - name: Установить OInt
        run: |
          TEMP_DEB="$(mktemp)" &&
          wget -O "$TEMP_DEB" 'https://api.athenaeum.digital/tc/job/Release/lastSuccessfulBuild/artifact/1.23.0/oint_1.23.0_all_en.deb' &&
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"



      - name: Requests processing
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OLLM_RequestsProcessing"

      - name: Models management
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OLLM_ModelsManagement"

      - name: Working with Blob
        if: ${{ cancelled() }} == false
        run: oscript /home/runner/.local/share/ovm/current/lib/1testrunner/src/main.os -run ./src/en/OInt/tests/Modules/internal/OPI_TestsCLI.os "CLI_OLLM_WorkingWithBlob"

      - name: Записать логи
        if: ${{ cancelled() }} == false
        uses: actions/cache/save@v3
        with:
          key: logs-Ollama
          path: ./docs/en/results/Ollama

  Encode:
    runs-on: ubuntu-latest
    needs: [Testing-Telegram,Testing-VK,Testing-Viber,Testing-Twitter,Testing-PostgreSQL,Testing-MySQL,Testing-SQLite,Testing-RCON,Testing-YandexDisk,Testing-GoogleWorkspace,Testing-GoogleCalendar,Testing-GoogleDrive,Testing-GoogleSheets,Testing-Notion,Testing-Slack,Testing-Airtable,Testing-Dropbox,Testing-Bitrix24,Testing-VkTeams,Testing-Ozon,Testing-Neocities,Testing-CDEK,Testing-YandexMetrika,Testing-S3,Testing-TCP,Testing-GreenAPI,Testing-Ollama]
    if: ${{ always() }}
    permissions:
      contents: write
  
    steps:

      - uses: actions/checkout@v2 

      - name: Обновить данные в репозитории
        run: git pull https://github.com/Bayselonarrend/OpenIntegrations

      - name: Получить тестовые данные из кэша
        uses: actions/cache/restore@v3
        with:
          key: test-data_new
          path: ./data.json

      - name: Зашифровать данные обратно
        continue-on-error: false
  
        run: |
          rm -f ./data.json.gpg
          gpg --batch --symmetric --cipher-algo AES256 --passphrase="$ENC_JSON" data.json
          rm -f ./data.json
        env:
          ENC_JSON: ${{ secrets.ENC_JSON }}

      - name: Получить логи Telegram
        uses: actions/cache/restore@v3
        with:
          key: logs-Telegram
          path: ./docs/en/results/Telegram


      - name: Очистка логов Telegram
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Telegram"

      - name: Получить логи VK
        uses: actions/cache/restore@v3
        with:
          key: logs-VK
          path: ./docs/en/results/VK


      - name: Очистка логов VK
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-VK"

      - name: Получить логи Viber
        uses: actions/cache/restore@v3
        with:
          key: logs-Viber
          path: ./docs/en/results/Viber


      - name: Очистка логов Viber
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Viber"

      - name: Получить логи Twitter
        uses: actions/cache/restore@v3
        with:
          key: logs-Twitter
          path: ./docs/en/results/Twitter


      - name: Очистка логов Twitter
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Twitter"

      - name: Получить логи PostgreSQL
        uses: actions/cache/restore@v3
        with:
          key: logs-PostgreSQL
          path: ./docs/en/results/PostgreSQL


      - name: Очистка логов PostgreSQL
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-PostgreSQL"

      - name: Получить логи MySQL
        uses: actions/cache/restore@v3
        with:
          key: logs-MySQL
          path: ./docs/en/results/MySQL


      - name: Очистка логов MySQL
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-MySQL"

      - name: Получить логи SQLite
        uses: actions/cache/restore@v3
        with:
          key: logs-SQLite
          path: ./docs/en/results/SQLite


      - name: Очистка логов SQLite
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-SQLite"

      - name: Получить логи RCON
        uses: actions/cache/restore@v3
        with:
          key: logs-RCON
          path: ./docs/en/results/RCON


      - name: Очистка логов RCON
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-RCON"

      - name: Получить логи YandexDisk
        uses: actions/cache/restore@v3
        with:
          key: logs-YandexDisk
          path: ./docs/en/results/YandexDisk


      - name: Очистка логов YandexDisk
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-YandexDisk"

      - name: Получить логи GoogleWorkspace
        uses: actions/cache/restore@v3
        with:
          key: logs-GoogleWorkspace
          path: ./docs/en/results/GoogleWorkspace


      - name: Очистка логов GoogleWorkspace
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-GoogleWorkspace"

      - name: Получить логи GoogleCalendar
        uses: actions/cache/restore@v3
        with:
          key: logs-GoogleCalendar
          path: ./docs/en/results/GoogleCalendar


      - name: Очистка логов GoogleCalendar
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-GoogleCalendar"

      - name: Получить логи GoogleDrive
        uses: actions/cache/restore@v3
        with:
          key: logs-GoogleDrive
          path: ./docs/en/results/GoogleDrive


      - name: Очистка логов GoogleDrive
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-GoogleDrive"

      - name: Получить логи GoogleSheets
        uses: actions/cache/restore@v3
        with:
          key: logs-GoogleSheets
          path: ./docs/en/results/GoogleSheets


      - name: Очистка логов GoogleSheets
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-GoogleSheets"

      - name: Получить логи Notion
        uses: actions/cache/restore@v3
        with:
          key: logs-Notion
          path: ./docs/en/results/Notion


      - name: Очистка логов Notion
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Notion"

      - name: Получить логи Slack
        uses: actions/cache/restore@v3
        with:
          key: logs-Slack
          path: ./docs/en/results/Slack


      - name: Очистка логов Slack
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Slack"

      - name: Получить логи Airtable
        uses: actions/cache/restore@v3
        with:
          key: logs-Airtable
          path: ./docs/en/results/Airtable


      - name: Очистка логов Airtable
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Airtable"

      - name: Получить логи Dropbox
        uses: actions/cache/restore@v3
        with:
          key: logs-Dropbox
          path: ./docs/en/results/Dropbox


      - name: Очистка логов Dropbox
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Dropbox"

      - name: Получить логи Bitrix24
        uses: actions/cache/restore@v3
        with:
          key: logs-Bitrix24
          path: ./docs/en/results/Bitrix24


      - name: Очистка логов Bitrix24
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Bitrix24"

      - name: Получить логи VkTeams
        uses: actions/cache/restore@v3
        with:
          key: logs-VkTeams
          path: ./docs/en/results/VkTeams


      - name: Очистка логов VkTeams
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-VkTeams"

      - name: Получить логи Ozon
        uses: actions/cache/restore@v3
        with:
          key: logs-Ozon
          path: ./docs/en/results/Ozon


      - name: Очистка логов Ozon
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Ozon"

      - name: Получить логи Neocities
        uses: actions/cache/restore@v3
        with:
          key: logs-Neocities
          path: ./docs/en/results/Neocities


      - name: Очистка логов Neocities
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Neocities"

      - name: Получить логи CDEK
        uses: actions/cache/restore@v3
        with:
          key: logs-CDEK
          path: ./docs/en/results/CDEK


      - name: Очистка логов CDEK
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-CDEK"

      - name: Получить логи YandexMetrika
        uses: actions/cache/restore@v3
        with:
          key: logs-YandexMetrika
          path: ./docs/en/results/YandexMetrika


      - name: Очистка логов YandexMetrika
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-YandexMetrika"

      - name: Получить логи S3
        uses: actions/cache/restore@v3
        with:
          key: logs-S3
          path: ./docs/en/results/S3


      - name: Очистка логов S3
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-S3"

      - name: Получить логи TCP
        uses: actions/cache/restore@v3
        with:
          key: logs-TCP
          path: ./docs/en/results/TCP


      - name: Очистка логов TCP
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-TCP"

      - name: Получить логи GreenAPI
        uses: actions/cache/restore@v3
        with:
          key: logs-GreenAPI
          path: ./docs/en/results/GreenAPI


      - name: Очистка логов GreenAPI
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-GreenAPI"

      - name: Получить логи Ollama
        uses: actions/cache/restore@v3
        with:
          key: logs-Ollama
          path: ./docs/en/results/Ollama


      - name: Очистка логов Ollama
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=logs-Ollama"


      - name: Записать данные    
        uses: stefanzweifel/git-auto-commit-action@v5   
        with:
          commit_user_name: Vitaly the Alpaca (bot) 
          commit_user_email: vitaly.the.alpaca@gmail.com
          commit_author: Vitaly the Alpaca <vitaly.the.alpaca@gmail.com>
          commit_message: Обновление зашифрованных данных по результатам тестов (workflow)


  Clear-Cache:
    runs-on: ubuntu-latest
    needs: [Testing-Telegram, Testing-VK, Testing-Viber, Testing-Twitter, Testing-PostgreSQL, Testing-MySQL, Testing-SQLite, Testing-RCON, Testing-YandexDisk, Testing-GoogleWorkspace, Testing-GoogleCalendar, Testing-GoogleDrive, Testing-GoogleSheets, Testing-Notion, Testing-Slack, Testing-Airtable, Testing-Dropbox, Testing-Bitrix24, Testing-VkTeams, Testing-Ozon, Testing-Neocities, Testing-CDEK, Testing-YandexMetrika, Testing-S3, Testing-TCP, Testing-GreenAPI, Testing-Ollama, Encode]
    if: ${{ always() }}
    steps:
      - name: Очистка основного кэша
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=test-data"

      - name: Очистка кэша Google
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=test-data_google"

      - name: Очистка кэша Twitter
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/Bayselonarrend/OpenIntegrations/actions/caches?key=test-data_new"
